============================================================
GOLD Parser Builder
Version 5.2.0.
============================================================


========================================
Terminals
========================================

 0      (EOF)
 1      (Error)
 2      Whitespace
 3      '-'
 4      '!='
 5      '"'
 6      '&'
 7      '*'
 8      '/'
 9      ':='
 10     '+'
 11     '<'
 12     '<='
 13     '=='
 14     '>'
 15     '>='
 16     '0'
 17     '1'
 18     '2'
 19     '3'
 20     '4'
 21     '5'
 22     '6'
 23     '7'
 24     '8'
 25     '9'
 26     a
 27     assign
 28     b
 29     begin
 30     c
 31     d
 32     do
 33     e
 34     else
 35     end
 36     f
 37     g
 38     h
 39     i
 40     if
 41     int
 42     j
 43     l
 44     m
 45     n
 46     o
 47     p
 48     printf
 49     q
 50     r
 51     s
 52     string
 53     t
 54     then
 55     u
 56     v
 57     while
 58     x
 59     z


========================================
Nonterminals
========================================

60      <ARITH>
61      <Begin>
62      <CMP>
63      <Expressao>
64      <N>
65      <NegadoExp>
66      <NF>
67      <OP>
68      <Statement>
69      <Statements>
70      <Valor>
71      <VAR>
72      <VF>


========================================
Rules
========================================

0       <Begin> ::= begin <Statements> end
1       <Statements> ::= <Statement> <Statements>
2       <Statements> ::= <Statement>
3       <Statement> ::= int <VAR>
4       <Statement> ::= string <VAR>
5       <Statement> ::= int <VAR> ':=' <N>
6       <Statement> ::= string <VAR> ':=' '"' <Expressao> '"'
7       <Statement> ::= printf <VAR>
8       <Statement> ::= printf '"' <Expressao> '"'
9       <Statement> ::= assign <VAR> ':=' <Expressao>
10      <Statement> ::= assign <VAR> ':=' '"' <Expressao> '"'
11      <Statement> ::= while <Expressao> do <Statements> end
12      <Statement> ::= if <Expressao> then <Statements> end
13      <Statement> ::= if <Expressao> then <Statements> else <Statements> end
14      <Expressao> ::= <Expressao> <CMP> <OP>
15      <Expressao> ::= <OP>
16      <OP> ::= <OP> <ARITH> <NegadoExp>
17      <OP> ::= <NegadoExp>
18      <NegadoExp> ::= '-' <Valor>
19      <NegadoExp> ::= <Valor>
20      <Valor> ::= <VAR>
21      <Valor> ::= <N>
22      <ARITH> ::= '+'
23      <ARITH> ::= '-'
24      <ARITH> ::= '&'
25      <ARITH> ::= '*'
26      <ARITH> ::= '/'
27      <CMP> ::= '>'
28      <CMP> ::= '<'
29      <CMP> ::= '<='
30      <CMP> ::= '>='
31      <CMP> ::= '=='
32      <CMP> ::= '!='
33      <N> ::= '0' <NF>
34      <N> ::= '1' <NF>
35      <N> ::= '2' <NF>
36      <N> ::= '3' <NF>
37      <N> ::= '4' <NF>
38      <N> ::= '5' <NF>
39      <N> ::= '6' <NF>
40      <N> ::= '7' <NF>
41      <N> ::= '8' <NF>
42      <N> ::= '9' <NF>
43      <NF> ::= '0' <NF>
44      <NF> ::= '1' <NF>
45      <NF> ::= '2' <NF>
46      <NF> ::= '3' <NF>
47      <NF> ::= '4' <NF>
48      <NF> ::= '5' <NF>
49      <NF> ::= '6' <NF>
50      <NF> ::= '7' <NF>
51      <NF> ::= '8' <NF>
52      <NF> ::= '9' <NF>
53      <NF> ::=
54      <VAR> ::= a <VF>
55      <VAR> ::= b <VF>
56      <VAR> ::= c <VF>
57      <VAR> ::= d <VF>
58      <VAR> ::= e <VF>
59      <VAR> ::= f <VF>
60      <VAR> ::= g <VF>
61      <VAR> ::= h <VF>
62      <VAR> ::= i <VF>
63      <VAR> ::= j <VF>
64      <VAR> ::= l <VF>
65      <VAR> ::= m <VF>
66      <VAR> ::= n <VF>
67      <VAR> ::= o <VF>
68      <VAR> ::= p <VF>
69      <VAR> ::= q <VF>
70      <VAR> ::= r <VF>
71      <VAR> ::= s <VF>
72      <VAR> ::= t <VF>
73      <VAR> ::= u <VF>
74      <VAR> ::= v <VF>
75      <VAR> ::= x <VF>
76      <VAR> ::= z <VF>
77      <VF> ::= a <VF>
78      <VF> ::= b <VF>
79      <VF> ::= c <VF>
80      <VF> ::= d <VF>
81      <VF> ::= e <VF>
82      <VF> ::= f <VF>
83      <VF> ::= g <VF>
84      <VF> ::= h <VF>
85      <VF> ::= i <VF>
86      <VF> ::= j <VF>
87      <VF> ::= l <VF>
88      <VF> ::= m <VF>
89      <VF> ::= n <VF>
90      <VF> ::= o <VF>
91      <VF> ::= p <VF>
92      <VF> ::= q <VF>
93      <VF> ::= r <VF>
94      <VF> ::= s <VF>
95      <VF> ::= t <VF>
96      <VF> ::= u <VF>
97      <VF> ::= v <VF>
98      <VF> ::= x <VF>
99      <VF> ::= z <VF>
100     <VF> ::=


========================================
LALR States
========================================

State 0
        <S'> ::= _ <Begin> (EOF)
        <Begin> ::= _ begin <Statements> end

        begin s 1
        <Begin> g 2


State 1
        Prior States: 0

        <Begin> ::= begin _ <Statements> end
        <Statements> ::= _ <Statement> <Statements>
        <Statements> ::= _ <Statement>
        <Statement> ::= _ int <VAR>
        <Statement> ::= _ string <VAR>
        <Statement> ::= _ int <VAR> ':=' <N>
        <Statement> ::= _ string <VAR> ':=' '"' <Expressao> '"'
        <Statement> ::= _ printf <VAR>
        <Statement> ::= _ printf '"' <Expressao> '"'
        <Statement> ::= _ assign <VAR> ':=' <Expressao>
        <Statement> ::= _ assign <VAR> ':=' '"' <Expressao> '"'
        <Statement> ::= _ while <Expressao> do <Statements> end
        <Statement> ::= _ if <Expressao> then <Statements> end
        <Statement> ::= _ if <Expressao> then <Statements> else <Statements> end

        assign s 3
        if s 4
        int s 5
        printf s 6
        string s 7
        while s 8
        <Statement> g 9
        <Statements> g 10


State 2
        Prior States: 0

        <S'> ::= <Begin> _ (EOF)

        (EOF) a


State 3
        Prior States: 1, 9, 133, 144, 188

        <Statement> ::= assign _ <VAR> ':=' <Expressao>
        <Statement> ::= assign _ <VAR> ':=' '"' <Expressao> '"'
        <VAR> ::= _ a <VF>
        <VAR> ::= _ b <VF>
        <VAR> ::= _ c <VF>
        <VAR> ::= _ d <VF>
        <VAR> ::= _ e <VF>
        <VAR> ::= _ f <VF>
        <VAR> ::= _ g <VF>
        <VAR> ::= _ h <VF>
        <VAR> ::= _ i <VF>
        <VAR> ::= _ j <VF>
        <VAR> ::= _ l <VF>
        <VAR> ::= _ m <VF>
        <VAR> ::= _ n <VF>
        <VAR> ::= _ o <VF>
        <VAR> ::= _ p <VF>
        <VAR> ::= _ q <VF>
        <VAR> ::= _ r <VF>
        <VAR> ::= _ s <VF>
        <VAR> ::= _ t <VF>
        <VAR> ::= _ u <VF>
        <VAR> ::= _ v <VF>
        <VAR> ::= _ x <VF>
        <VAR> ::= _ z <VF>

        a s 11
        b s 12
        c s 13
        d s 14
        e s 15
        f s 16
        g s 17
        h s 18
        i s 19
        j s 20
        l s 21
        m s 22
        n s 23
        o s 24
        p s 25
        q s 26
        r s 27
        s s 28
        t s 29
        u s 30
        v s 31
        x s 32
        z s 33
        <VAR> g 34


State 4
        Prior States: 1, 9, 133, 144, 188

        <Statement> ::= if _ <Expressao> then <Statements> end
        <Statement> ::= if _ <Expressao> then <Statements> else <Statements> end
        <Expressao> ::= _ <Expressao> <CMP> <OP>
        <Expressao> ::= _ <OP>
        <OP> ::= _ <OP> <ARITH> <NegadoExp>
        <OP> ::= _ <NegadoExp>
        <NegadoExp> ::= _ '-' <Valor>
        <NegadoExp> ::= _ <Valor>
        <Valor> ::= _ <VAR>
        <Valor> ::= _ <N>
        <N> ::= _ '0' <NF>
        <N> ::= _ '1' <NF>
        <N> ::= _ '2' <NF>
        <N> ::= _ '3' <NF>
        <N> ::= _ '4' <NF>
        <N> ::= _ '5' <NF>
        <N> ::= _ '6' <NF>
        <N> ::= _ '7' <NF>
        <N> ::= _ '8' <NF>
        <N> ::= _ '9' <NF>
        <VAR> ::= _ a <VF>
        <VAR> ::= _ b <VF>
        <VAR> ::= _ c <VF>
        <VAR> ::= _ d <VF>
        <VAR> ::= _ e <VF>
        <VAR> ::= _ f <VF>
        <VAR> ::= _ g <VF>
        <VAR> ::= _ h <VF>
        <VAR> ::= _ i <VF>
        <VAR> ::= _ j <VF>
        <VAR> ::= _ l <VF>
        <VAR> ::= _ m <VF>
        <VAR> ::= _ n <VF>
        <VAR> ::= _ o <VF>
        <VAR> ::= _ p <VF>
        <VAR> ::= _ q <VF>
        <VAR> ::= _ r <VF>
        <VAR> ::= _ s <VF>
        <VAR> ::= _ t <VF>
        <VAR> ::= _ u <VF>
        <VAR> ::= _ v <VF>
        <VAR> ::= _ x <VF>
        <VAR> ::= _ z <VF>

        '-' s 35
        '0' s 36
        '1' s 37
        '2' s 38
        '3' s 39
        '4' s 40
        '5' s 41
        '6' s 42
        '7' s 43
        '8' s 44
        '9' s 45
        a s 11
        b s 12
        c s 13
        d s 14
        e s 15
        f s 16
        g s 17
        h s 18
        i s 19
        j s 20
        l s 21
        m s 22
        n s 23
        o s 24
        p s 25
        q s 26
        r s 27
        s s 28
        t s 29
        u s 30
        v s 31
        x s 32
        z s 33
        <Expressao> g 46
        <N> g 47
        <NegadoExp> g 48
        <OP> g 49
        <Valor> g 50
        <VAR> g 51


State 5
        Prior States: 1, 9, 133, 144, 188

        <Statement> ::= int _ <VAR>
        <Statement> ::= int _ <VAR> ':=' <N>
        <VAR> ::= _ a <VF>
        <VAR> ::= _ b <VF>
        <VAR> ::= _ c <VF>
        <VAR> ::= _ d <VF>
        <VAR> ::= _ e <VF>
        <VAR> ::= _ f <VF>
        <VAR> ::= _ g <VF>
        <VAR> ::= _ h <VF>
        <VAR> ::= _ i <VF>
        <VAR> ::= _ j <VF>
        <VAR> ::= _ l <VF>
        <VAR> ::= _ m <VF>
        <VAR> ::= _ n <VF>
        <VAR> ::= _ o <VF>
        <VAR> ::= _ p <VF>
        <VAR> ::= _ q <VF>
        <VAR> ::= _ r <VF>
        <VAR> ::= _ s <VF>
        <VAR> ::= _ t <VF>
        <VAR> ::= _ u <VF>
        <VAR> ::= _ v <VF>
        <VAR> ::= _ x <VF>
        <VAR> ::= _ z <VF>

        a s 11
        b s 12
        c s 13
        d s 14
        e s 15
        f s 16
        g s 17
        h s 18
        i s 19
        j s 20
        l s 21
        m s 22
        n s 23
        o s 24
        p s 25
        q s 26
        r s 27
        s s 28
        t s 29
        u s 30
        v s 31
        x s 32
        z s 33
        <VAR> g 52


State 6
        Prior States: 1, 9, 133, 144, 188

        <Statement> ::= printf _ <VAR>
        <Statement> ::= printf _ '"' <Expressao> '"'
        <VAR> ::= _ a <VF>
        <VAR> ::= _ b <VF>
        <VAR> ::= _ c <VF>
        <VAR> ::= _ d <VF>
        <VAR> ::= _ e <VF>
        <VAR> ::= _ f <VF>
        <VAR> ::= _ g <VF>
        <VAR> ::= _ h <VF>
        <VAR> ::= _ i <VF>
        <VAR> ::= _ j <VF>
        <VAR> ::= _ l <VF>
        <VAR> ::= _ m <VF>
        <VAR> ::= _ n <VF>
        <VAR> ::= _ o <VF>
        <VAR> ::= _ p <VF>
        <VAR> ::= _ q <VF>
        <VAR> ::= _ r <VF>
        <VAR> ::= _ s <VF>
        <VAR> ::= _ t <VF>
        <VAR> ::= _ u <VF>
        <VAR> ::= _ v <VF>
        <VAR> ::= _ x <VF>
        <VAR> ::= _ z <VF>

        '"' s 53
        a s 11
        b s 12
        c s 13
        d s 14
        e s 15
        f s 16
        g s 17
        h s 18
        i s 19
        j s 20
        l s 21
        m s 22
        n s 23
        o s 24
        p s 25
        q s 26
        r s 27
        s s 28
        t s 29
        u s 30
        v s 31
        x s 32
        z s 33
        <VAR> g 54


State 7
        Prior States: 1, 9, 133, 144, 188

        <Statement> ::= string _ <VAR>
        <Statement> ::= string _ <VAR> ':=' '"' <Expressao> '"'
        <VAR> ::= _ a <VF>
        <VAR> ::= _ b <VF>
        <VAR> ::= _ c <VF>
        <VAR> ::= _ d <VF>
        <VAR> ::= _ e <VF>
        <VAR> ::= _ f <VF>
        <VAR> ::= _ g <VF>
        <VAR> ::= _ h <VF>
        <VAR> ::= _ i <VF>
        <VAR> ::= _ j <VF>
        <VAR> ::= _ l <VF>
        <VAR> ::= _ m <VF>
        <VAR> ::= _ n <VF>
        <VAR> ::= _ o <VF>
        <VAR> ::= _ p <VF>
        <VAR> ::= _ q <VF>
        <VAR> ::= _ r <VF>
        <VAR> ::= _ s <VF>
        <VAR> ::= _ t <VF>
        <VAR> ::= _ u <VF>
        <VAR> ::= _ v <VF>
        <VAR> ::= _ x <VF>
        <VAR> ::= _ z <VF>

        a s 11
        b s 12
        c s 13
        d s 14
        e s 15
        f s 16
        g s 17
        h s 18
        i s 19
        j s 20
        l s 21
        m s 22
        n s 23
        o s 24
        p s 25
        q s 26
        r s 27
        s s 28
        t s 29
        u s 30
        v s 31
        x s 32
        z s 33
        <VAR> g 55


State 8
        Prior States: 1, 9, 133, 144, 188

        <Statement> ::= while _ <Expressao> do <Statements> end
        <Expressao> ::= _ <Expressao> <CMP> <OP>
        <Expressao> ::= _ <OP>
        <OP> ::= _ <OP> <ARITH> <NegadoExp>
        <OP> ::= _ <NegadoExp>
        <NegadoExp> ::= _ '-' <Valor>
        <NegadoExp> ::= _ <Valor>
        <Valor> ::= _ <VAR>
        <Valor> ::= _ <N>
        <N> ::= _ '0' <NF>
        <N> ::= _ '1' <NF>
        <N> ::= _ '2' <NF>
        <N> ::= _ '3' <NF>
        <N> ::= _ '4' <NF>
        <N> ::= _ '5' <NF>
        <N> ::= _ '6' <NF>
        <N> ::= _ '7' <NF>
        <N> ::= _ '8' <NF>
        <N> ::= _ '9' <NF>
        <VAR> ::= _ a <VF>
        <VAR> ::= _ b <VF>
        <VAR> ::= _ c <VF>
        <VAR> ::= _ d <VF>
        <VAR> ::= _ e <VF>
        <VAR> ::= _ f <VF>
        <VAR> ::= _ g <VF>
        <VAR> ::= _ h <VF>
        <VAR> ::= _ i <VF>
        <VAR> ::= _ j <VF>
        <VAR> ::= _ l <VF>
        <VAR> ::= _ m <VF>
        <VAR> ::= _ n <VF>
        <VAR> ::= _ o <VF>
        <VAR> ::= _ p <VF>
        <VAR> ::= _ q <VF>
        <VAR> ::= _ r <VF>
        <VAR> ::= _ s <VF>
        <VAR> ::= _ t <VF>
        <VAR> ::= _ u <VF>
        <VAR> ::= _ v <VF>
        <VAR> ::= _ x <VF>
        <VAR> ::= _ z <VF>

        '-' s 35
        '0' s 36
        '1' s 37
        '2' s 38
        '3' s 39
        '4' s 40
        '5' s 41
        '6' s 42
        '7' s 43
        '8' s 44
        '9' s 45
        a s 11
        b s 12
        c s 13
        d s 14
        e s 15
        f s 16
        g s 17
        h s 18
        i s 19
        j s 20
        l s 21
        m s 22
        n s 23
        o s 24
        p s 25
        q s 26
        r s 27
        s s 28
        t s 29
        u s 30
        v s 31
        x s 32
        z s 33
        <Expressao> g 56
        <N> g 47
        <NegadoExp> g 48
        <OP> g 49
        <Valor> g 50
        <VAR> g 51


State 9
        Prior States: 1, 9, 133, 144, 188

        <Statements> ::= <Statement> _ <Statements>
        <Statements> ::= <Statement> _
        <Statements> ::= _ <Statement> <Statements>
        <Statements> ::= _ <Statement>
        <Statement> ::= _ int <VAR>
        <Statement> ::= _ string <VAR>
        <Statement> ::= _ int <VAR> ':=' <N>
        <Statement> ::= _ string <VAR> ':=' '"' <Expressao> '"'
        <Statement> ::= _ printf <VAR>
        <Statement> ::= _ printf '"' <Expressao> '"'
        <Statement> ::= _ assign <VAR> ':=' <Expressao>
        <Statement> ::= _ assign <VAR> ':=' '"' <Expressao> '"'
        <Statement> ::= _ while <Expressao> do <Statements> end
        <Statement> ::= _ if <Expressao> then <Statements> end
        <Statement> ::= _ if <Expressao> then <Statements> else <Statements> end

        assign s 3
        if s 4
        int s 5
        printf s 6
        string s 7
        while s 8
        <Statement> g 9
        <Statements> g 57
        else r 2
        end r 2


State 10
        Prior States: 1

        <Begin> ::= begin <Statements> _ end

        end s 58


State 11
        Prior States: 3, 4, 5, 6, 7, 8, 35, 53, 105, 134, 140, 168, 185

        <VAR> ::= a _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 82
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 12
        Prior States: 3, 4, 5, 6, 7, 8, 35, 53, 105, 134, 140, 168, 185

        <VAR> ::= b _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 83
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 13
        Prior States: 3, 4, 5, 6, 7, 8, 35, 53, 105, 134, 140, 168, 185

        <VAR> ::= c _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 84
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 14
        Prior States: 3, 4, 5, 6, 7, 8, 35, 53, 105, 134, 140, 168, 185

        <VAR> ::= d _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 85
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 15
        Prior States: 3, 4, 5, 6, 7, 8, 35, 53, 105, 134, 140, 168, 185

        <VAR> ::= e _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 86
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 16
        Prior States: 3, 4, 5, 6, 7, 8, 35, 53, 105, 134, 140, 168, 185

        <VAR> ::= f _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 87
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 17
        Prior States: 3, 4, 5, 6, 7, 8, 35, 53, 105, 134, 140, 168, 185

        <VAR> ::= g _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 88
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 18
        Prior States: 3, 4, 5, 6, 7, 8, 35, 53, 105, 134, 140, 168, 185

        <VAR> ::= h _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 89
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 19
        Prior States: 3, 4, 5, 6, 7, 8, 35, 53, 105, 134, 140, 168, 185

        <VAR> ::= i _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 90
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 20
        Prior States: 3, 4, 5, 6, 7, 8, 35, 53, 105, 134, 140, 168, 185

        <VAR> ::= j _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 91
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 21
        Prior States: 3, 4, 5, 6, 7, 8, 35, 53, 105, 134, 140, 168, 185

        <VAR> ::= l _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 92
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 22
        Prior States: 3, 4, 5, 6, 7, 8, 35, 53, 105, 134, 140, 168, 185

        <VAR> ::= m _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 93
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 23
        Prior States: 3, 4, 5, 6, 7, 8, 35, 53, 105, 134, 140, 168, 185

        <VAR> ::= n _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 94
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 24
        Prior States: 3, 4, 5, 6, 7, 8, 35, 53, 105, 134, 140, 168, 185

        <VAR> ::= o _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 95
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 25
        Prior States: 3, 4, 5, 6, 7, 8, 35, 53, 105, 134, 140, 168, 185

        <VAR> ::= p _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 96
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 26
        Prior States: 3, 4, 5, 6, 7, 8, 35, 53, 105, 134, 140, 168, 185

        <VAR> ::= q _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 97
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 27
        Prior States: 3, 4, 5, 6, 7, 8, 35, 53, 105, 134, 140, 168, 185

        <VAR> ::= r _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 98
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 28
        Prior States: 3, 4, 5, 6, 7, 8, 35, 53, 105, 134, 140, 168, 185

        <VAR> ::= s _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 99
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 29
        Prior States: 3, 4, 5, 6, 7, 8, 35, 53, 105, 134, 140, 168, 185

        <VAR> ::= t _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 100
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 30
        Prior States: 3, 4, 5, 6, 7, 8, 35, 53, 105, 134, 140, 168, 185

        <VAR> ::= u _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 101
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 31
        Prior States: 3, 4, 5, 6, 7, 8, 35, 53, 105, 134, 140, 168, 185

        <VAR> ::= v _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 102
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 32
        Prior States: 3, 4, 5, 6, 7, 8, 35, 53, 105, 134, 140, 168, 185

        <VAR> ::= x _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 103
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 33
        Prior States: 3, 4, 5, 6, 7, 8, 35, 53, 105, 134, 140, 168, 185

        <VAR> ::= z _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 104
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 34
        Prior States: 3

        <Statement> ::= assign <VAR> _ ':=' <Expressao>
        <Statement> ::= assign <VAR> _ ':=' '"' <Expressao> '"'

        ':=' s 105


State 35
        Prior States: 4, 8, 53, 105, 134, 140, 168, 185

        <NegadoExp> ::= '-' _ <Valor>
        <Valor> ::= _ <VAR>
        <Valor> ::= _ <N>
        <N> ::= _ '0' <NF>
        <N> ::= _ '1' <NF>
        <N> ::= _ '2' <NF>
        <N> ::= _ '3' <NF>
        <N> ::= _ '4' <NF>
        <N> ::= _ '5' <NF>
        <N> ::= _ '6' <NF>
        <N> ::= _ '7' <NF>
        <N> ::= _ '8' <NF>
        <N> ::= _ '9' <NF>
        <VAR> ::= _ a <VF>
        <VAR> ::= _ b <VF>
        <VAR> ::= _ c <VF>
        <VAR> ::= _ d <VF>
        <VAR> ::= _ e <VF>
        <VAR> ::= _ f <VF>
        <VAR> ::= _ g <VF>
        <VAR> ::= _ h <VF>
        <VAR> ::= _ i <VF>
        <VAR> ::= _ j <VF>
        <VAR> ::= _ l <VF>
        <VAR> ::= _ m <VF>
        <VAR> ::= _ n <VF>
        <VAR> ::= _ o <VF>
        <VAR> ::= _ p <VF>
        <VAR> ::= _ q <VF>
        <VAR> ::= _ r <VF>
        <VAR> ::= _ s <VF>
        <VAR> ::= _ t <VF>
        <VAR> ::= _ u <VF>
        <VAR> ::= _ v <VF>
        <VAR> ::= _ x <VF>
        <VAR> ::= _ z <VF>

        '0' s 36
        '1' s 37
        '2' s 38
        '3' s 39
        '4' s 40
        '5' s 41
        '6' s 42
        '7' s 43
        '8' s 44
        '9' s 45
        a s 11
        b s 12
        c s 13
        d s 14
        e s 15
        f s 16
        g s 17
        h s 18
        i s 19
        j s 20
        l s 21
        m s 22
        n s 23
        o s 24
        p s 25
        q s 26
        r s 27
        s s 28
        t s 29
        u s 30
        v s 31
        x s 32
        z s 33
        <N> g 47
        <Valor> g 106
        <VAR> g 51


State 36
        Prior States: 4, 8, 35, 53, 105, 134, 140, 141, 168, 185

        <N> ::= '0' _ <NF>
        <NF> ::= _ '0' <NF>
        <NF> ::= _ '1' <NF>
        <NF> ::= _ '2' <NF>
        <NF> ::= _ '3' <NF>
        <NF> ::= _ '4' <NF>
        <NF> ::= _ '5' <NF>
        <NF> ::= _ '6' <NF>
        <NF> ::= _ '7' <NF>
        <NF> ::= _ '8' <NF>
        <NF> ::= _ '9' <NF>
        <NF> ::= _

        '0' s 107
        '1' s 108
        '2' s 109
        '3' s 110
        '4' s 111
        '5' s 112
        '6' s 113
        '7' s 114
        '8' s 115
        '9' s 116
        <NF> g 117
        '-' r 53
        '!=' r 53
        '"' r 53
        '&' r 53
        '*' r 53
        '/' r 53
        '+' r 53
        '<' r 53
        '<=' r 53
        '==' r 53
        '>' r 53
        '>=' r 53
        assign r 53
        do r 53
        else r 53
        end r 53
        if r 53
        int r 53
        printf r 53
        string r 53
        then r 53
        while r 53


State 37
        Prior States: 4, 8, 35, 53, 105, 134, 140, 141, 168, 185

        <N> ::= '1' _ <NF>
        <NF> ::= _ '0' <NF>
        <NF> ::= _ '1' <NF>
        <NF> ::= _ '2' <NF>
        <NF> ::= _ '3' <NF>
        <NF> ::= _ '4' <NF>
        <NF> ::= _ '5' <NF>
        <NF> ::= _ '6' <NF>
        <NF> ::= _ '7' <NF>
        <NF> ::= _ '8' <NF>
        <NF> ::= _ '9' <NF>
        <NF> ::= _

        '0' s 107
        '1' s 108
        '2' s 109
        '3' s 110
        '4' s 111
        '5' s 112
        '6' s 113
        '7' s 114
        '8' s 115
        '9' s 116
        <NF> g 118
        '-' r 53
        '!=' r 53
        '"' r 53
        '&' r 53
        '*' r 53
        '/' r 53
        '+' r 53
        '<' r 53
        '<=' r 53
        '==' r 53
        '>' r 53
        '>=' r 53
        assign r 53
        do r 53
        else r 53
        end r 53
        if r 53
        int r 53
        printf r 53
        string r 53
        then r 53
        while r 53


State 38
        Prior States: 4, 8, 35, 53, 105, 134, 140, 141, 168, 185

        <N> ::= '2' _ <NF>
        <NF> ::= _ '0' <NF>
        <NF> ::= _ '1' <NF>
        <NF> ::= _ '2' <NF>
        <NF> ::= _ '3' <NF>
        <NF> ::= _ '4' <NF>
        <NF> ::= _ '5' <NF>
        <NF> ::= _ '6' <NF>
        <NF> ::= _ '7' <NF>
        <NF> ::= _ '8' <NF>
        <NF> ::= _ '9' <NF>
        <NF> ::= _

        '0' s 107
        '1' s 108
        '2' s 109
        '3' s 110
        '4' s 111
        '5' s 112
        '6' s 113
        '7' s 114
        '8' s 115
        '9' s 116
        <NF> g 119
        '-' r 53
        '!=' r 53
        '"' r 53
        '&' r 53
        '*' r 53
        '/' r 53
        '+' r 53
        '<' r 53
        '<=' r 53
        '==' r 53
        '>' r 53
        '>=' r 53
        assign r 53
        do r 53
        else r 53
        end r 53
        if r 53
        int r 53
        printf r 53
        string r 53
        then r 53
        while r 53


State 39
        Prior States: 4, 8, 35, 53, 105, 134, 140, 141, 168, 185

        <N> ::= '3' _ <NF>
        <NF> ::= _ '0' <NF>
        <NF> ::= _ '1' <NF>
        <NF> ::= _ '2' <NF>
        <NF> ::= _ '3' <NF>
        <NF> ::= _ '4' <NF>
        <NF> ::= _ '5' <NF>
        <NF> ::= _ '6' <NF>
        <NF> ::= _ '7' <NF>
        <NF> ::= _ '8' <NF>
        <NF> ::= _ '9' <NF>
        <NF> ::= _

        '0' s 107
        '1' s 108
        '2' s 109
        '3' s 110
        '4' s 111
        '5' s 112
        '6' s 113
        '7' s 114
        '8' s 115
        '9' s 116
        <NF> g 120
        '-' r 53
        '!=' r 53
        '"' r 53
        '&' r 53
        '*' r 53
        '/' r 53
        '+' r 53
        '<' r 53
        '<=' r 53
        '==' r 53
        '>' r 53
        '>=' r 53
        assign r 53
        do r 53
        else r 53
        end r 53
        if r 53
        int r 53
        printf r 53
        string r 53
        then r 53
        while r 53


State 40
        Prior States: 4, 8, 35, 53, 105, 134, 140, 141, 168, 185

        <N> ::= '4' _ <NF>
        <NF> ::= _ '0' <NF>
        <NF> ::= _ '1' <NF>
        <NF> ::= _ '2' <NF>
        <NF> ::= _ '3' <NF>
        <NF> ::= _ '4' <NF>
        <NF> ::= _ '5' <NF>
        <NF> ::= _ '6' <NF>
        <NF> ::= _ '7' <NF>
        <NF> ::= _ '8' <NF>
        <NF> ::= _ '9' <NF>
        <NF> ::= _

        '0' s 107
        '1' s 108
        '2' s 109
        '3' s 110
        '4' s 111
        '5' s 112
        '6' s 113
        '7' s 114
        '8' s 115
        '9' s 116
        <NF> g 121
        '-' r 53
        '!=' r 53
        '"' r 53
        '&' r 53
        '*' r 53
        '/' r 53
        '+' r 53
        '<' r 53
        '<=' r 53
        '==' r 53
        '>' r 53
        '>=' r 53
        assign r 53
        do r 53
        else r 53
        end r 53
        if r 53
        int r 53
        printf r 53
        string r 53
        then r 53
        while r 53


State 41
        Prior States: 4, 8, 35, 53, 105, 134, 140, 141, 168, 185

        <N> ::= '5' _ <NF>
        <NF> ::= _ '0' <NF>
        <NF> ::= _ '1' <NF>
        <NF> ::= _ '2' <NF>
        <NF> ::= _ '3' <NF>
        <NF> ::= _ '4' <NF>
        <NF> ::= _ '5' <NF>
        <NF> ::= _ '6' <NF>
        <NF> ::= _ '7' <NF>
        <NF> ::= _ '8' <NF>
        <NF> ::= _ '9' <NF>
        <NF> ::= _

        '0' s 107
        '1' s 108
        '2' s 109
        '3' s 110
        '4' s 111
        '5' s 112
        '6' s 113
        '7' s 114
        '8' s 115
        '9' s 116
        <NF> g 122
        '-' r 53
        '!=' r 53
        '"' r 53
        '&' r 53
        '*' r 53
        '/' r 53
        '+' r 53
        '<' r 53
        '<=' r 53
        '==' r 53
        '>' r 53
        '>=' r 53
        assign r 53
        do r 53
        else r 53
        end r 53
        if r 53
        int r 53
        printf r 53
        string r 53
        then r 53
        while r 53


State 42
        Prior States: 4, 8, 35, 53, 105, 134, 140, 141, 168, 185

        <N> ::= '6' _ <NF>
        <NF> ::= _ '0' <NF>
        <NF> ::= _ '1' <NF>
        <NF> ::= _ '2' <NF>
        <NF> ::= _ '3' <NF>
        <NF> ::= _ '4' <NF>
        <NF> ::= _ '5' <NF>
        <NF> ::= _ '6' <NF>
        <NF> ::= _ '7' <NF>
        <NF> ::= _ '8' <NF>
        <NF> ::= _ '9' <NF>
        <NF> ::= _

        '0' s 107
        '1' s 108
        '2' s 109
        '3' s 110
        '4' s 111
        '5' s 112
        '6' s 113
        '7' s 114
        '8' s 115
        '9' s 116
        <NF> g 123
        '-' r 53
        '!=' r 53
        '"' r 53
        '&' r 53
        '*' r 53
        '/' r 53
        '+' r 53
        '<' r 53
        '<=' r 53
        '==' r 53
        '>' r 53
        '>=' r 53
        assign r 53
        do r 53
        else r 53
        end r 53
        if r 53
        int r 53
        printf r 53
        string r 53
        then r 53
        while r 53


State 43
        Prior States: 4, 8, 35, 53, 105, 134, 140, 141, 168, 185

        <N> ::= '7' _ <NF>
        <NF> ::= _ '0' <NF>
        <NF> ::= _ '1' <NF>
        <NF> ::= _ '2' <NF>
        <NF> ::= _ '3' <NF>
        <NF> ::= _ '4' <NF>
        <NF> ::= _ '5' <NF>
        <NF> ::= _ '6' <NF>
        <NF> ::= _ '7' <NF>
        <NF> ::= _ '8' <NF>
        <NF> ::= _ '9' <NF>
        <NF> ::= _

        '0' s 107
        '1' s 108
        '2' s 109
        '3' s 110
        '4' s 111
        '5' s 112
        '6' s 113
        '7' s 114
        '8' s 115
        '9' s 116
        <NF> g 124
        '-' r 53
        '!=' r 53
        '"' r 53
        '&' r 53
        '*' r 53
        '/' r 53
        '+' r 53
        '<' r 53
        '<=' r 53
        '==' r 53
        '>' r 53
        '>=' r 53
        assign r 53
        do r 53
        else r 53
        end r 53
        if r 53
        int r 53
        printf r 53
        string r 53
        then r 53
        while r 53


State 44
        Prior States: 4, 8, 35, 53, 105, 134, 140, 141, 168, 185

        <N> ::= '8' _ <NF>
        <NF> ::= _ '0' <NF>
        <NF> ::= _ '1' <NF>
        <NF> ::= _ '2' <NF>
        <NF> ::= _ '3' <NF>
        <NF> ::= _ '4' <NF>
        <NF> ::= _ '5' <NF>
        <NF> ::= _ '6' <NF>
        <NF> ::= _ '7' <NF>
        <NF> ::= _ '8' <NF>
        <NF> ::= _ '9' <NF>
        <NF> ::= _

        '0' s 107
        '1' s 108
        '2' s 109
        '3' s 110
        '4' s 111
        '5' s 112
        '6' s 113
        '7' s 114
        '8' s 115
        '9' s 116
        <NF> g 125
        '-' r 53
        '!=' r 53
        '"' r 53
        '&' r 53
        '*' r 53
        '/' r 53
        '+' r 53
        '<' r 53
        '<=' r 53
        '==' r 53
        '>' r 53
        '>=' r 53
        assign r 53
        do r 53
        else r 53
        end r 53
        if r 53
        int r 53
        printf r 53
        string r 53
        then r 53
        while r 53


State 45
        Prior States: 4, 8, 35, 53, 105, 134, 140, 141, 168, 185

        <N> ::= '9' _ <NF>
        <NF> ::= _ '0' <NF>
        <NF> ::= _ '1' <NF>
        <NF> ::= _ '2' <NF>
        <NF> ::= _ '3' <NF>
        <NF> ::= _ '4' <NF>
        <NF> ::= _ '5' <NF>
        <NF> ::= _ '6' <NF>
        <NF> ::= _ '7' <NF>
        <NF> ::= _ '8' <NF>
        <NF> ::= _ '9' <NF>
        <NF> ::= _

        '0' s 107
        '1' s 108
        '2' s 109
        '3' s 110
        '4' s 111
        '5' s 112
        '6' s 113
        '7' s 114
        '8' s 115
        '9' s 116
        <NF> g 126
        '-' r 53
        '!=' r 53
        '"' r 53
        '&' r 53
        '*' r 53
        '/' r 53
        '+' r 53
        '<' r 53
        '<=' r 53
        '==' r 53
        '>' r 53
        '>=' r 53
        assign r 53
        do r 53
        else r 53
        end r 53
        if r 53
        int r 53
        printf r 53
        string r 53
        then r 53
        while r 53


State 46
        Prior States: 4

        <Statement> ::= if <Expressao> _ then <Statements> end
        <Statement> ::= if <Expressao> _ then <Statements> else <Statements> end
        <Expressao> ::= <Expressao> _ <CMP> <OP>
        <CMP> ::= _ '>'
        <CMP> ::= _ '<'
        <CMP> ::= _ '<='
        <CMP> ::= _ '>='
        <CMP> ::= _ '=='
        <CMP> ::= _ '!='

        '!=' s 127
        '<' s 128
        '<=' s 129
        '==' s 130
        '>' s 131
        '>=' s 132
        then s 133
        <CMP> g 134


State 47
        Prior States: 4, 8, 35, 53, 105, 134, 140, 168, 185

        <Valor> ::= <N> _

        '-' r 21
        '!=' r 21
        '"' r 21
        '&' r 21
        '*' r 21
        '/' r 21
        '+' r 21
        '<' r 21
        '<=' r 21
        '==' r 21
        '>' r 21
        '>=' r 21
        assign r 21
        do r 21
        else r 21
        end r 21
        if r 21
        int r 21
        printf r 21
        string r 21
        then r 21
        while r 21


State 48
        Prior States: 4, 8, 53, 105, 134, 168, 185

        <OP> ::= <NegadoExp> _

        '-' r 17
        '!=' r 17
        '"' r 17
        '&' r 17
        '*' r 17
        '/' r 17
        '+' r 17
        '<' r 17
        '<=' r 17
        '==' r 17
        '>' r 17
        '>=' r 17
        assign r 17
        do r 17
        else r 17
        end r 17
        if r 17
        int r 17
        printf r 17
        string r 17
        then r 17
        while r 17


State 49
        Prior States: 4, 8, 53, 105, 168, 185

        <Expressao> ::= <OP> _
        <OP> ::= <OP> _ <ARITH> <NegadoExp>
        <ARITH> ::= _ '+'
        <ARITH> ::= _ '-'
        <ARITH> ::= _ '&'
        <ARITH> ::= _ '*'
        <ARITH> ::= _ '/'

        '-' s 135
        '&' s 136
        '*' s 137
        '/' s 138
        '+' s 139
        <ARITH> g 140
        '!=' r 15
        '"' r 15
        '<' r 15
        '<=' r 15
        '==' r 15
        '>' r 15
        '>=' r 15
        assign r 15
        do r 15
        else r 15
        end r 15
        if r 15
        int r 15
        printf r 15
        string r 15
        then r 15
        while r 15


State 50
        Prior States: 4, 8, 53, 105, 134, 140, 168, 185

        <NegadoExp> ::= <Valor> _

        '-' r 19
        '!=' r 19
        '"' r 19
        '&' r 19
        '*' r 19
        '/' r 19
        '+' r 19
        '<' r 19
        '<=' r 19
        '==' r 19
        '>' r 19
        '>=' r 19
        assign r 19
        do r 19
        else r 19
        end r 19
        if r 19
        int r 19
        printf r 19
        string r 19
        then r 19
        while r 19


State 51
        Prior States: 4, 8, 35, 53, 105, 134, 140, 168, 185

        <Valor> ::= <VAR> _

        '-' r 20
        '!=' r 20
        '"' r 20
        '&' r 20
        '*' r 20
        '/' r 20
        '+' r 20
        '<' r 20
        '<=' r 20
        '==' r 20
        '>' r 20
        '>=' r 20
        assign r 20
        do r 20
        else r 20
        end r 20
        if r 20
        int r 20
        printf r 20
        string r 20
        then r 20
        while r 20


State 52
        Prior States: 5

        <Statement> ::= int <VAR> _
        <Statement> ::= int <VAR> _ ':=' <N>

        ':=' s 141
        assign r 3
        else r 3
        end r 3
        if r 3
        int r 3
        printf r 3
        string r 3
        while r 3


State 53
        Prior States: 6

        <Statement> ::= printf '"' _ <Expressao> '"'
        <Expressao> ::= _ <Expressao> <CMP> <OP>
        <Expressao> ::= _ <OP>
        <OP> ::= _ <OP> <ARITH> <NegadoExp>
        <OP> ::= _ <NegadoExp>
        <NegadoExp> ::= _ '-' <Valor>
        <NegadoExp> ::= _ <Valor>
        <Valor> ::= _ <VAR>
        <Valor> ::= _ <N>
        <N> ::= _ '0' <NF>
        <N> ::= _ '1' <NF>
        <N> ::= _ '2' <NF>
        <N> ::= _ '3' <NF>
        <N> ::= _ '4' <NF>
        <N> ::= _ '5' <NF>
        <N> ::= _ '6' <NF>
        <N> ::= _ '7' <NF>
        <N> ::= _ '8' <NF>
        <N> ::= _ '9' <NF>
        <VAR> ::= _ a <VF>
        <VAR> ::= _ b <VF>
        <VAR> ::= _ c <VF>
        <VAR> ::= _ d <VF>
        <VAR> ::= _ e <VF>
        <VAR> ::= _ f <VF>
        <VAR> ::= _ g <VF>
        <VAR> ::= _ h <VF>
        <VAR> ::= _ i <VF>
        <VAR> ::= _ j <VF>
        <VAR> ::= _ l <VF>
        <VAR> ::= _ m <VF>
        <VAR> ::= _ n <VF>
        <VAR> ::= _ o <VF>
        <VAR> ::= _ p <VF>
        <VAR> ::= _ q <VF>
        <VAR> ::= _ r <VF>
        <VAR> ::= _ s <VF>
        <VAR> ::= _ t <VF>
        <VAR> ::= _ u <VF>
        <VAR> ::= _ v <VF>
        <VAR> ::= _ x <VF>
        <VAR> ::= _ z <VF>

        '-' s 35
        '0' s 36
        '1' s 37
        '2' s 38
        '3' s 39
        '4' s 40
        '5' s 41
        '6' s 42
        '7' s 43
        '8' s 44
        '9' s 45
        a s 11
        b s 12
        c s 13
        d s 14
        e s 15
        f s 16
        g s 17
        h s 18
        i s 19
        j s 20
        l s 21
        m s 22
        n s 23
        o s 24
        p s 25
        q s 26
        r s 27
        s s 28
        t s 29
        u s 30
        v s 31
        x s 32
        z s 33
        <Expressao> g 142
        <N> g 47
        <NegadoExp> g 48
        <OP> g 49
        <Valor> g 50
        <VAR> g 51


State 54
        Prior States: 6

        <Statement> ::= printf <VAR> _

        assign r 7
        else r 7
        end r 7
        if r 7
        int r 7
        printf r 7
        string r 7
        while r 7


State 55
        Prior States: 7

        <Statement> ::= string <VAR> _
        <Statement> ::= string <VAR> _ ':=' '"' <Expressao> '"'

        ':=' s 143
        assign r 4
        else r 4
        end r 4
        if r 4
        int r 4
        printf r 4
        string r 4
        while r 4


State 56
        Prior States: 8

        <Statement> ::= while <Expressao> _ do <Statements> end
        <Expressao> ::= <Expressao> _ <CMP> <OP>
        <CMP> ::= _ '>'
        <CMP> ::= _ '<'
        <CMP> ::= _ '<='
        <CMP> ::= _ '>='
        <CMP> ::= _ '=='
        <CMP> ::= _ '!='

        '!=' s 127
        '<' s 128
        '<=' s 129
        '==' s 130
        '>' s 131
        '>=' s 132
        do s 144
        <CMP> g 134


State 57
        Prior States: 9

        <Statements> ::= <Statement> <Statements> _

        else r 1
        end r 1


State 58
        Prior States: 10

        <Begin> ::= begin <Statements> end _

        (EOF) r 0


State 59
        Prior States: 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81

        <VF> ::= a _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 145
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 60
        Prior States: 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81

        <VF> ::= b _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 146
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 61
        Prior States: 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81

        <VF> ::= c _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 147
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 62
        Prior States: 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81

        <VF> ::= d _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 148
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 63
        Prior States: 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81

        <VF> ::= e _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 149
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 64
        Prior States: 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81

        <VF> ::= f _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 150
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 65
        Prior States: 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81

        <VF> ::= g _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 151
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 66
        Prior States: 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81

        <VF> ::= h _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 152
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 67
        Prior States: 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81

        <VF> ::= i _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 153
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 68
        Prior States: 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81

        <VF> ::= j _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 154
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 69
        Prior States: 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81

        <VF> ::= l _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 155
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 70
        Prior States: 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81

        <VF> ::= m _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 156
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 71
        Prior States: 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81

        <VF> ::= n _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 157
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 72
        Prior States: 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81

        <VF> ::= o _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 158
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 73
        Prior States: 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81

        <VF> ::= p _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 159
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 74
        Prior States: 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81

        <VF> ::= q _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 160
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 75
        Prior States: 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81

        <VF> ::= r _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 161
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 76
        Prior States: 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81

        <VF> ::= s _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 162
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 77
        Prior States: 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81

        <VF> ::= t _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 163
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 78
        Prior States: 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81

        <VF> ::= u _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 164
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 79
        Prior States: 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81

        <VF> ::= v _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 165
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 80
        Prior States: 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81

        <VF> ::= x _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 166
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 81
        Prior States: 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81

        <VF> ::= z _ <VF>
        <VF> ::= _ a <VF>
        <VF> ::= _ b <VF>
        <VF> ::= _ c <VF>
        <VF> ::= _ d <VF>
        <VF> ::= _ e <VF>
        <VF> ::= _ f <VF>
        <VF> ::= _ g <VF>
        <VF> ::= _ h <VF>
        <VF> ::= _ i <VF>
        <VF> ::= _ j <VF>
        <VF> ::= _ l <VF>
        <VF> ::= _ m <VF>
        <VF> ::= _ n <VF>
        <VF> ::= _ o <VF>
        <VF> ::= _ p <VF>
        <VF> ::= _ q <VF>
        <VF> ::= _ r <VF>
        <VF> ::= _ s <VF>
        <VF> ::= _ t <VF>
        <VF> ::= _ u <VF>
        <VF> ::= _ v <VF>
        <VF> ::= _ x <VF>
        <VF> ::= _ z <VF>
        <VF> ::= _

        a s 59
        b s 60
        c s 61
        d s 62
        e s 63
        f s 64
        g s 65
        h s 66
        i s 67
        j s 68
        l s 69
        m s 70
        n s 71
        o s 72
        p s 73
        q s 74
        r s 75
        s s 76
        t s 77
        u s 78
        v s 79
        x s 80
        z s 81
        <VF> g 167
        '-' r 100
        '!=' r 100
        '"' r 100
        '&' r 100
        '*' r 100
        '/' r 100
        ':=' r 100
        '+' r 100
        '<' r 100
        '<=' r 100
        '==' r 100
        '>' r 100
        '>=' r 100
        assign r 100
        do r 100
        else r 100
        end r 100
        if r 100
        int r 100
        printf r 100
        string r 100
        then r 100
        while r 100


State 82
        Prior States: 11

        <VAR> ::= a <VF> _

        '-' r 54
        '!=' r 54
        '"' r 54
        '&' r 54
        '*' r 54
        '/' r 54
        ':=' r 54
        '+' r 54
        '<' r 54
        '<=' r 54
        '==' r 54
        '>' r 54
        '>=' r 54
        assign r 54
        do r 54
        else r 54
        end r 54
        if r 54
        int r 54
        printf r 54
        string r 54
        then r 54
        while r 54


State 83
        Prior States: 12

        <VAR> ::= b <VF> _

        '-' r 55
        '!=' r 55
        '"' r 55
        '&' r 55
        '*' r 55
        '/' r 55
        ':=' r 55
        '+' r 55
        '<' r 55
        '<=' r 55
        '==' r 55
        '>' r 55
        '>=' r 55
        assign r 55
        do r 55
        else r 55
        end r 55
        if r 55
        int r 55
        printf r 55
        string r 55
        then r 55
        while r 55


State 84
        Prior States: 13

        <VAR> ::= c <VF> _

        '-' r 56
        '!=' r 56
        '"' r 56
        '&' r 56
        '*' r 56
        '/' r 56
        ':=' r 56
        '+' r 56
        '<' r 56
        '<=' r 56
        '==' r 56
        '>' r 56
        '>=' r 56
        assign r 56
        do r 56
        else r 56
        end r 56
        if r 56
        int r 56
        printf r 56
        string r 56
        then r 56
        while r 56


State 85
        Prior States: 14

        <VAR> ::= d <VF> _

        '-' r 57
        '!=' r 57
        '"' r 57
        '&' r 57
        '*' r 57
        '/' r 57
        ':=' r 57
        '+' r 57
        '<' r 57
        '<=' r 57
        '==' r 57
        '>' r 57
        '>=' r 57
        assign r 57
        do r 57
        else r 57
        end r 57
        if r 57
        int r 57
        printf r 57
        string r 57
        then r 57
        while r 57


State 86
        Prior States: 15

        <VAR> ::= e <VF> _

        '-' r 58
        '!=' r 58
        '"' r 58
        '&' r 58
        '*' r 58
        '/' r 58
        ':=' r 58
        '+' r 58
        '<' r 58
        '<=' r 58
        '==' r 58
        '>' r 58
        '>=' r 58
        assign r 58
        do r 58
        else r 58
        end r 58
        if r 58
        int r 58
        printf r 58
        string r 58
        then r 58
        while r 58


State 87
        Prior States: 16

        <VAR> ::= f <VF> _

        '-' r 59
        '!=' r 59
        '"' r 59
        '&' r 59
        '*' r 59
        '/' r 59
        ':=' r 59
        '+' r 59
        '<' r 59
        '<=' r 59
        '==' r 59
        '>' r 59
        '>=' r 59
        assign r 59
        do r 59
        else r 59
        end r 59
        if r 59
        int r 59
        printf r 59
        string r 59
        then r 59
        while r 59


State 88
        Prior States: 17

        <VAR> ::= g <VF> _

        '-' r 60
        '!=' r 60
        '"' r 60
        '&' r 60
        '*' r 60
        '/' r 60
        ':=' r 60
        '+' r 60
        '<' r 60
        '<=' r 60
        '==' r 60
        '>' r 60
        '>=' r 60
        assign r 60
        do r 60
        else r 60
        end r 60
        if r 60
        int r 60
        printf r 60
        string r 60
        then r 60
        while r 60


State 89
        Prior States: 18

        <VAR> ::= h <VF> _

        '-' r 61
        '!=' r 61
        '"' r 61
        '&' r 61
        '*' r 61
        '/' r 61
        ':=' r 61
        '+' r 61
        '<' r 61
        '<=' r 61
        '==' r 61
        '>' r 61
        '>=' r 61
        assign r 61
        do r 61
        else r 61
        end r 61
        if r 61
        int r 61
        printf r 61
        string r 61
        then r 61
        while r 61


State 90
        Prior States: 19

        <VAR> ::= i <VF> _

        '-' r 62
        '!=' r 62
        '"' r 62
        '&' r 62
        '*' r 62
        '/' r 62
        ':=' r 62
        '+' r 62
        '<' r 62
        '<=' r 62
        '==' r 62
        '>' r 62
        '>=' r 62
        assign r 62
        do r 62
        else r 62
        end r 62
        if r 62
        int r 62
        printf r 62
        string r 62
        then r 62
        while r 62


State 91
        Prior States: 20

        <VAR> ::= j <VF> _

        '-' r 63
        '!=' r 63
        '"' r 63
        '&' r 63
        '*' r 63
        '/' r 63
        ':=' r 63
        '+' r 63
        '<' r 63
        '<=' r 63
        '==' r 63
        '>' r 63
        '>=' r 63
        assign r 63
        do r 63
        else r 63
        end r 63
        if r 63
        int r 63
        printf r 63
        string r 63
        then r 63
        while r 63


State 92
        Prior States: 21

        <VAR> ::= l <VF> _

        '-' r 64
        '!=' r 64
        '"' r 64
        '&' r 64
        '*' r 64
        '/' r 64
        ':=' r 64
        '+' r 64
        '<' r 64
        '<=' r 64
        '==' r 64
        '>' r 64
        '>=' r 64
        assign r 64
        do r 64
        else r 64
        end r 64
        if r 64
        int r 64
        printf r 64
        string r 64
        then r 64
        while r 64


State 93
        Prior States: 22

        <VAR> ::= m <VF> _

        '-' r 65
        '!=' r 65
        '"' r 65
        '&' r 65
        '*' r 65
        '/' r 65
        ':=' r 65
        '+' r 65
        '<' r 65
        '<=' r 65
        '==' r 65
        '>' r 65
        '>=' r 65
        assign r 65
        do r 65
        else r 65
        end r 65
        if r 65
        int r 65
        printf r 65
        string r 65
        then r 65
        while r 65


State 94
        Prior States: 23

        <VAR> ::= n <VF> _

        '-' r 66
        '!=' r 66
        '"' r 66
        '&' r 66
        '*' r 66
        '/' r 66
        ':=' r 66
        '+' r 66
        '<' r 66
        '<=' r 66
        '==' r 66
        '>' r 66
        '>=' r 66
        assign r 66
        do r 66
        else r 66
        end r 66
        if r 66
        int r 66
        printf r 66
        string r 66
        then r 66
        while r 66


State 95
        Prior States: 24

        <VAR> ::= o <VF> _

        '-' r 67
        '!=' r 67
        '"' r 67
        '&' r 67
        '*' r 67
        '/' r 67
        ':=' r 67
        '+' r 67
        '<' r 67
        '<=' r 67
        '==' r 67
        '>' r 67
        '>=' r 67
        assign r 67
        do r 67
        else r 67
        end r 67
        if r 67
        int r 67
        printf r 67
        string r 67
        then r 67
        while r 67


State 96
        Prior States: 25

        <VAR> ::= p <VF> _

        '-' r 68
        '!=' r 68
        '"' r 68
        '&' r 68
        '*' r 68
        '/' r 68
        ':=' r 68
        '+' r 68
        '<' r 68
        '<=' r 68
        '==' r 68
        '>' r 68
        '>=' r 68
        assign r 68
        do r 68
        else r 68
        end r 68
        if r 68
        int r 68
        printf r 68
        string r 68
        then r 68
        while r 68


State 97
        Prior States: 26

        <VAR> ::= q <VF> _

        '-' r 69
        '!=' r 69
        '"' r 69
        '&' r 69
        '*' r 69
        '/' r 69
        ':=' r 69
        '+' r 69
        '<' r 69
        '<=' r 69
        '==' r 69
        '>' r 69
        '>=' r 69
        assign r 69
        do r 69
        else r 69
        end r 69
        if r 69
        int r 69
        printf r 69
        string r 69
        then r 69
        while r 69


State 98
        Prior States: 27

        <VAR> ::= r <VF> _

        '-' r 70
        '!=' r 70
        '"' r 70
        '&' r 70
        '*' r 70
        '/' r 70
        ':=' r 70
        '+' r 70
        '<' r 70
        '<=' r 70
        '==' r 70
        '>' r 70
        '>=' r 70
        assign r 70
        do r 70
        else r 70
        end r 70
        if r 70
        int r 70
        printf r 70
        string r 70
        then r 70
        while r 70


State 99
        Prior States: 28

        <VAR> ::= s <VF> _

        '-' r 71
        '!=' r 71
        '"' r 71
        '&' r 71
        '*' r 71
        '/' r 71
        ':=' r 71
        '+' r 71
        '<' r 71
        '<=' r 71
        '==' r 71
        '>' r 71
        '>=' r 71
        assign r 71
        do r 71
        else r 71
        end r 71
        if r 71
        int r 71
        printf r 71
        string r 71
        then r 71
        while r 71


State 100
        Prior States: 29

        <VAR> ::= t <VF> _

        '-' r 72
        '!=' r 72
        '"' r 72
        '&' r 72
        '*' r 72
        '/' r 72
        ':=' r 72
        '+' r 72
        '<' r 72
        '<=' r 72
        '==' r 72
        '>' r 72
        '>=' r 72
        assign r 72
        do r 72
        else r 72
        end r 72
        if r 72
        int r 72
        printf r 72
        string r 72
        then r 72
        while r 72


State 101
        Prior States: 30

        <VAR> ::= u <VF> _

        '-' r 73
        '!=' r 73
        '"' r 73
        '&' r 73
        '*' r 73
        '/' r 73
        ':=' r 73
        '+' r 73
        '<' r 73
        '<=' r 73
        '==' r 73
        '>' r 73
        '>=' r 73
        assign r 73
        do r 73
        else r 73
        end r 73
        if r 73
        int r 73
        printf r 73
        string r 73
        then r 73
        while r 73


State 102
        Prior States: 31

        <VAR> ::= v <VF> _

        '-' r 74
        '!=' r 74
        '"' r 74
        '&' r 74
        '*' r 74
        '/' r 74
        ':=' r 74
        '+' r 74
        '<' r 74
        '<=' r 74
        '==' r 74
        '>' r 74
        '>=' r 74
        assign r 74
        do r 74
        else r 74
        end r 74
        if r 74
        int r 74
        printf r 74
        string r 74
        then r 74
        while r 74


State 103
        Prior States: 32

        <VAR> ::= x <VF> _

        '-' r 75
        '!=' r 75
        '"' r 75
        '&' r 75
        '*' r 75
        '/' r 75
        ':=' r 75
        '+' r 75
        '<' r 75
        '<=' r 75
        '==' r 75
        '>' r 75
        '>=' r 75
        assign r 75
        do r 75
        else r 75
        end r 75
        if r 75
        int r 75
        printf r 75
        string r 75
        then r 75
        while r 75


State 104
        Prior States: 33

        <VAR> ::= z <VF> _

        '-' r 76
        '!=' r 76
        '"' r 76
        '&' r 76
        '*' r 76
        '/' r 76
        ':=' r 76
        '+' r 76
        '<' r 76
        '<=' r 76
        '==' r 76
        '>' r 76
        '>=' r 76
        assign r 76
        do r 76
        else r 76
        end r 76
        if r 76
        int r 76
        printf r 76
        string r 76
        then r 76
        while r 76


State 105
        Prior States: 34

        <Statement> ::= assign <VAR> ':=' _ <Expressao>
        <Statement> ::= assign <VAR> ':=' _ '"' <Expressao> '"'
        <Expressao> ::= _ <Expressao> <CMP> <OP>
        <Expressao> ::= _ <OP>
        <OP> ::= _ <OP> <ARITH> <NegadoExp>
        <OP> ::= _ <NegadoExp>
        <NegadoExp> ::= _ '-' <Valor>
        <NegadoExp> ::= _ <Valor>
        <Valor> ::= _ <VAR>
        <Valor> ::= _ <N>
        <N> ::= _ '0' <NF>
        <N> ::= _ '1' <NF>
        <N> ::= _ '2' <NF>
        <N> ::= _ '3' <NF>
        <N> ::= _ '4' <NF>
        <N> ::= _ '5' <NF>
        <N> ::= _ '6' <NF>
        <N> ::= _ '7' <NF>
        <N> ::= _ '8' <NF>
        <N> ::= _ '9' <NF>
        <VAR> ::= _ a <VF>
        <VAR> ::= _ b <VF>
        <VAR> ::= _ c <VF>
        <VAR> ::= _ d <VF>
        <VAR> ::= _ e <VF>
        <VAR> ::= _ f <VF>
        <VAR> ::= _ g <VF>
        <VAR> ::= _ h <VF>
        <VAR> ::= _ i <VF>
        <VAR> ::= _ j <VF>
        <VAR> ::= _ l <VF>
        <VAR> ::= _ m <VF>
        <VAR> ::= _ n <VF>
        <VAR> ::= _ o <VF>
        <VAR> ::= _ p <VF>
        <VAR> ::= _ q <VF>
        <VAR> ::= _ r <VF>
        <VAR> ::= _ s <VF>
        <VAR> ::= _ t <VF>
        <VAR> ::= _ u <VF>
        <VAR> ::= _ v <VF>
        <VAR> ::= _ x <VF>
        <VAR> ::= _ z <VF>

        '-' s 35
        '"' s 168
        '0' s 36
        '1' s 37
        '2' s 38
        '3' s 39
        '4' s 40
        '5' s 41
        '6' s 42
        '7' s 43
        '8' s 44
        '9' s 45
        a s 11
        b s 12
        c s 13
        d s 14
        e s 15
        f s 16
        g s 17
        h s 18
        i s 19
        j s 20
        l s 21
        m s 22
        n s 23
        o s 24
        p s 25
        q s 26
        r s 27
        s s 28
        t s 29
        u s 30
        v s 31
        x s 32
        z s 33
        <Expressao> g 169
        <N> g 47
        <NegadoExp> g 48
        <OP> g 49
        <Valor> g 50
        <VAR> g 51


State 106
        Prior States: 35

        <NegadoExp> ::= '-' <Valor> _

        '-' r 18
        '!=' r 18
        '"' r 18
        '&' r 18
        '*' r 18
        '/' r 18
        '+' r 18
        '<' r 18
        '<=' r 18
        '==' r 18
        '>' r 18
        '>=' r 18
        assign r 18
        do r 18
        else r 18
        end r 18
        if r 18
        int r 18
        printf r 18
        string r 18
        then r 18
        while r 18


State 107
        Prior States: 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116

        <NF> ::= '0' _ <NF>
        <NF> ::= _ '0' <NF>
        <NF> ::= _ '1' <NF>
        <NF> ::= _ '2' <NF>
        <NF> ::= _ '3' <NF>
        <NF> ::= _ '4' <NF>
        <NF> ::= _ '5' <NF>
        <NF> ::= _ '6' <NF>
        <NF> ::= _ '7' <NF>
        <NF> ::= _ '8' <NF>
        <NF> ::= _ '9' <NF>
        <NF> ::= _

        '0' s 107
        '1' s 108
        '2' s 109
        '3' s 110
        '4' s 111
        '5' s 112
        '6' s 113
        '7' s 114
        '8' s 115
        '9' s 116
        <NF> g 170
        '-' r 53
        '!=' r 53
        '"' r 53
        '&' r 53
        '*' r 53
        '/' r 53
        '+' r 53
        '<' r 53
        '<=' r 53
        '==' r 53
        '>' r 53
        '>=' r 53
        assign r 53
        do r 53
        else r 53
        end r 53
        if r 53
        int r 53
        printf r 53
        string r 53
        then r 53
        while r 53


State 108
        Prior States: 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116

        <NF> ::= '1' _ <NF>
        <NF> ::= _ '0' <NF>
        <NF> ::= _ '1' <NF>
        <NF> ::= _ '2' <NF>
        <NF> ::= _ '3' <NF>
        <NF> ::= _ '4' <NF>
        <NF> ::= _ '5' <NF>
        <NF> ::= _ '6' <NF>
        <NF> ::= _ '7' <NF>
        <NF> ::= _ '8' <NF>
        <NF> ::= _ '9' <NF>
        <NF> ::= _

        '0' s 107
        '1' s 108
        '2' s 109
        '3' s 110
        '4' s 111
        '5' s 112
        '6' s 113
        '7' s 114
        '8' s 115
        '9' s 116
        <NF> g 171
        '-' r 53
        '!=' r 53
        '"' r 53
        '&' r 53
        '*' r 53
        '/' r 53
        '+' r 53
        '<' r 53
        '<=' r 53
        '==' r 53
        '>' r 53
        '>=' r 53
        assign r 53
        do r 53
        else r 53
        end r 53
        if r 53
        int r 53
        printf r 53
        string r 53
        then r 53
        while r 53


State 109
        Prior States: 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116

        <NF> ::= '2' _ <NF>
        <NF> ::= _ '0' <NF>
        <NF> ::= _ '1' <NF>
        <NF> ::= _ '2' <NF>
        <NF> ::= _ '3' <NF>
        <NF> ::= _ '4' <NF>
        <NF> ::= _ '5' <NF>
        <NF> ::= _ '6' <NF>
        <NF> ::= _ '7' <NF>
        <NF> ::= _ '8' <NF>
        <NF> ::= _ '9' <NF>
        <NF> ::= _

        '0' s 107
        '1' s 108
        '2' s 109
        '3' s 110
        '4' s 111
        '5' s 112
        '6' s 113
        '7' s 114
        '8' s 115
        '9' s 116
        <NF> g 172
        '-' r 53
        '!=' r 53
        '"' r 53
        '&' r 53
        '*' r 53
        '/' r 53
        '+' r 53
        '<' r 53
        '<=' r 53
        '==' r 53
        '>' r 53
        '>=' r 53
        assign r 53
        do r 53
        else r 53
        end r 53
        if r 53
        int r 53
        printf r 53
        string r 53
        then r 53
        while r 53


State 110
        Prior States: 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116

        <NF> ::= '3' _ <NF>
        <NF> ::= _ '0' <NF>
        <NF> ::= _ '1' <NF>
        <NF> ::= _ '2' <NF>
        <NF> ::= _ '3' <NF>
        <NF> ::= _ '4' <NF>
        <NF> ::= _ '5' <NF>
        <NF> ::= _ '6' <NF>
        <NF> ::= _ '7' <NF>
        <NF> ::= _ '8' <NF>
        <NF> ::= _ '9' <NF>
        <NF> ::= _

        '0' s 107
        '1' s 108
        '2' s 109
        '3' s 110
        '4' s 111
        '5' s 112
        '6' s 113
        '7' s 114
        '8' s 115
        '9' s 116
        <NF> g 173
        '-' r 53
        '!=' r 53
        '"' r 53
        '&' r 53
        '*' r 53
        '/' r 53
        '+' r 53
        '<' r 53
        '<=' r 53
        '==' r 53
        '>' r 53
        '>=' r 53
        assign r 53
        do r 53
        else r 53
        end r 53
        if r 53
        int r 53
        printf r 53
        string r 53
        then r 53
        while r 53


State 111
        Prior States: 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116

        <NF> ::= '4' _ <NF>
        <NF> ::= _ '0' <NF>
        <NF> ::= _ '1' <NF>
        <NF> ::= _ '2' <NF>
        <NF> ::= _ '3' <NF>
        <NF> ::= _ '4' <NF>
        <NF> ::= _ '5' <NF>
        <NF> ::= _ '6' <NF>
        <NF> ::= _ '7' <NF>
        <NF> ::= _ '8' <NF>
        <NF> ::= _ '9' <NF>
        <NF> ::= _

        '0' s 107
        '1' s 108
        '2' s 109
        '3' s 110
        '4' s 111
        '5' s 112
        '6' s 113
        '7' s 114
        '8' s 115
        '9' s 116
        <NF> g 174
        '-' r 53
        '!=' r 53
        '"' r 53
        '&' r 53
        '*' r 53
        '/' r 53
        '+' r 53
        '<' r 53
        '<=' r 53
        '==' r 53
        '>' r 53
        '>=' r 53
        assign r 53
        do r 53
        else r 53
        end r 53
        if r 53
        int r 53
        printf r 53
        string r 53
        then r 53
        while r 53


State 112
        Prior States: 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116

        <NF> ::= '5' _ <NF>
        <NF> ::= _ '0' <NF>
        <NF> ::= _ '1' <NF>
        <NF> ::= _ '2' <NF>
        <NF> ::= _ '3' <NF>
        <NF> ::= _ '4' <NF>
        <NF> ::= _ '5' <NF>
        <NF> ::= _ '6' <NF>
        <NF> ::= _ '7' <NF>
        <NF> ::= _ '8' <NF>
        <NF> ::= _ '9' <NF>
        <NF> ::= _

        '0' s 107
        '1' s 108
        '2' s 109
        '3' s 110
        '4' s 111
        '5' s 112
        '6' s 113
        '7' s 114
        '8' s 115
        '9' s 116
        <NF> g 175
        '-' r 53
        '!=' r 53
        '"' r 53
        '&' r 53
        '*' r 53
        '/' r 53
        '+' r 53
        '<' r 53
        '<=' r 53
        '==' r 53
        '>' r 53
        '>=' r 53
        assign r 53
        do r 53
        else r 53
        end r 53
        if r 53
        int r 53
        printf r 53
        string r 53
        then r 53
        while r 53


State 113
        Prior States: 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116

        <NF> ::= '6' _ <NF>
        <NF> ::= _ '0' <NF>
        <NF> ::= _ '1' <NF>
        <NF> ::= _ '2' <NF>
        <NF> ::= _ '3' <NF>
        <NF> ::= _ '4' <NF>
        <NF> ::= _ '5' <NF>
        <NF> ::= _ '6' <NF>
        <NF> ::= _ '7' <NF>
        <NF> ::= _ '8' <NF>
        <NF> ::= _ '9' <NF>
        <NF> ::= _

        '0' s 107
        '1' s 108
        '2' s 109
        '3' s 110
        '4' s 111
        '5' s 112
        '6' s 113
        '7' s 114
        '8' s 115
        '9' s 116
        <NF> g 176
        '-' r 53
        '!=' r 53
        '"' r 53
        '&' r 53
        '*' r 53
        '/' r 53
        '+' r 53
        '<' r 53
        '<=' r 53
        '==' r 53
        '>' r 53
        '>=' r 53
        assign r 53
        do r 53
        else r 53
        end r 53
        if r 53
        int r 53
        printf r 53
        string r 53
        then r 53
        while r 53


State 114
        Prior States: 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116

        <NF> ::= '7' _ <NF>
        <NF> ::= _ '0' <NF>
        <NF> ::= _ '1' <NF>
        <NF> ::= _ '2' <NF>
        <NF> ::= _ '3' <NF>
        <NF> ::= _ '4' <NF>
        <NF> ::= _ '5' <NF>
        <NF> ::= _ '6' <NF>
        <NF> ::= _ '7' <NF>
        <NF> ::= _ '8' <NF>
        <NF> ::= _ '9' <NF>
        <NF> ::= _

        '0' s 107
        '1' s 108
        '2' s 109
        '3' s 110
        '4' s 111
        '5' s 112
        '6' s 113
        '7' s 114
        '8' s 115
        '9' s 116
        <NF> g 177
        '-' r 53
        '!=' r 53
        '"' r 53
        '&' r 53
        '*' r 53
        '/' r 53
        '+' r 53
        '<' r 53
        '<=' r 53
        '==' r 53
        '>' r 53
        '>=' r 53
        assign r 53
        do r 53
        else r 53
        end r 53
        if r 53
        int r 53
        printf r 53
        string r 53
        then r 53
        while r 53


State 115
        Prior States: 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116

        <NF> ::= '8' _ <NF>
        <NF> ::= _ '0' <NF>
        <NF> ::= _ '1' <NF>
        <NF> ::= _ '2' <NF>
        <NF> ::= _ '3' <NF>
        <NF> ::= _ '4' <NF>
        <NF> ::= _ '5' <NF>
        <NF> ::= _ '6' <NF>
        <NF> ::= _ '7' <NF>
        <NF> ::= _ '8' <NF>
        <NF> ::= _ '9' <NF>
        <NF> ::= _

        '0' s 107
        '1' s 108
        '2' s 109
        '3' s 110
        '4' s 111
        '5' s 112
        '6' s 113
        '7' s 114
        '8' s 115
        '9' s 116
        <NF> g 178
        '-' r 53
        '!=' r 53
        '"' r 53
        '&' r 53
        '*' r 53
        '/' r 53
        '+' r 53
        '<' r 53
        '<=' r 53
        '==' r 53
        '>' r 53
        '>=' r 53
        assign r 53
        do r 53
        else r 53
        end r 53
        if r 53
        int r 53
        printf r 53
        string r 53
        then r 53
        while r 53


State 116
        Prior States: 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116

        <NF> ::= '9' _ <NF>
        <NF> ::= _ '0' <NF>
        <NF> ::= _ '1' <NF>
        <NF> ::= _ '2' <NF>
        <NF> ::= _ '3' <NF>
        <NF> ::= _ '4' <NF>
        <NF> ::= _ '5' <NF>
        <NF> ::= _ '6' <NF>
        <NF> ::= _ '7' <NF>
        <NF> ::= _ '8' <NF>
        <NF> ::= _ '9' <NF>
        <NF> ::= _

        '0' s 107
        '1' s 108
        '2' s 109
        '3' s 110
        '4' s 111
        '5' s 112
        '6' s 113
        '7' s 114
        '8' s 115
        '9' s 116
        <NF> g 179
        '-' r 53
        '!=' r 53
        '"' r 53
        '&' r 53
        '*' r 53
        '/' r 53
        '+' r 53
        '<' r 53
        '<=' r 53
        '==' r 53
        '>' r 53
        '>=' r 53
        assign r 53
        do r 53
        else r 53
        end r 53
        if r 53
        int r 53
        printf r 53
        string r 53
        then r 53
        while r 53


State 117
        Prior States: 36

        <N> ::= '0' <NF> _

        '-' r 33
        '!=' r 33
        '"' r 33
        '&' r 33
        '*' r 33
        '/' r 33
        '+' r 33
        '<' r 33
        '<=' r 33
        '==' r 33
        '>' r 33
        '>=' r 33
        assign r 33
        do r 33
        else r 33
        end r 33
        if r 33
        int r 33
        printf r 33
        string r 33
        then r 33
        while r 33


State 118
        Prior States: 37

        <N> ::= '1' <NF> _

        '-' r 34
        '!=' r 34
        '"' r 34
        '&' r 34
        '*' r 34
        '/' r 34
        '+' r 34
        '<' r 34
        '<=' r 34
        '==' r 34
        '>' r 34
        '>=' r 34
        assign r 34
        do r 34
        else r 34
        end r 34
        if r 34
        int r 34
        printf r 34
        string r 34
        then r 34
        while r 34


State 119
        Prior States: 38

        <N> ::= '2' <NF> _

        '-' r 35
        '!=' r 35
        '"' r 35
        '&' r 35
        '*' r 35
        '/' r 35
        '+' r 35
        '<' r 35
        '<=' r 35
        '==' r 35
        '>' r 35
        '>=' r 35
        assign r 35
        do r 35
        else r 35
        end r 35
        if r 35
        int r 35
        printf r 35
        string r 35
        then r 35
        while r 35


State 120
        Prior States: 39

        <N> ::= '3' <NF> _

        '-' r 36
        '!=' r 36
        '"' r 36
        '&' r 36
        '*' r 36
        '/' r 36
        '+' r 36
        '<' r 36
        '<=' r 36
        '==' r 36
        '>' r 36
        '>=' r 36
        assign r 36
        do r 36
        else r 36
        end r 36
        if r 36
        int r 36
        printf r 36
        string r 36
        then r 36
        while r 36


State 121
        Prior States: 40

        <N> ::= '4' <NF> _

        '-' r 37
        '!=' r 37
        '"' r 37
        '&' r 37
        '*' r 37
        '/' r 37
        '+' r 37
        '<' r 37
        '<=' r 37
        '==' r 37
        '>' r 37
        '>=' r 37
        assign r 37
        do r 37
        else r 37
        end r 37
        if r 37
        int r 37
        printf r 37
        string r 37
        then r 37
        while r 37


State 122
        Prior States: 41

        <N> ::= '5' <NF> _

        '-' r 38
        '!=' r 38
        '"' r 38
        '&' r 38
        '*' r 38
        '/' r 38
        '+' r 38
        '<' r 38
        '<=' r 38
        '==' r 38
        '>' r 38
        '>=' r 38
        assign r 38
        do r 38
        else r 38
        end r 38
        if r 38
        int r 38
        printf r 38
        string r 38
        then r 38
        while r 38


State 123
        Prior States: 42

        <N> ::= '6' <NF> _

        '-' r 39
        '!=' r 39
        '"' r 39
        '&' r 39
        '*' r 39
        '/' r 39
        '+' r 39
        '<' r 39
        '<=' r 39
        '==' r 39
        '>' r 39
        '>=' r 39
        assign r 39
        do r 39
        else r 39
        end r 39
        if r 39
        int r 39
        printf r 39
        string r 39
        then r 39
        while r 39


State 124
        Prior States: 43

        <N> ::= '7' <NF> _

        '-' r 40
        '!=' r 40
        '"' r 40
        '&' r 40
        '*' r 40
        '/' r 40
        '+' r 40
        '<' r 40
        '<=' r 40
        '==' r 40
        '>' r 40
        '>=' r 40
        assign r 40
        do r 40
        else r 40
        end r 40
        if r 40
        int r 40
        printf r 40
        string r 40
        then r 40
        while r 40


State 125
        Prior States: 44

        <N> ::= '8' <NF> _

        '-' r 41
        '!=' r 41
        '"' r 41
        '&' r 41
        '*' r 41
        '/' r 41
        '+' r 41
        '<' r 41
        '<=' r 41
        '==' r 41
        '>' r 41
        '>=' r 41
        assign r 41
        do r 41
        else r 41
        end r 41
        if r 41
        int r 41
        printf r 41
        string r 41
        then r 41
        while r 41


State 126
        Prior States: 45

        <N> ::= '9' <NF> _

        '-' r 42
        '!=' r 42
        '"' r 42
        '&' r 42
        '*' r 42
        '/' r 42
        '+' r 42
        '<' r 42
        '<=' r 42
        '==' r 42
        '>' r 42
        '>=' r 42
        assign r 42
        do r 42
        else r 42
        end r 42
        if r 42
        int r 42
        printf r 42
        string r 42
        then r 42
        while r 42


State 127
        Prior States: 46, 56, 142, 169, 187, 190

        <CMP> ::= '!=' _

        '-' r 32
        '0' r 32
        '1' r 32
        '2' r 32
        '3' r 32
        '4' r 32
        '5' r 32
        '6' r 32
        '7' r 32
        '8' r 32
        '9' r 32
        a r 32
        b r 32
        c r 32
        d r 32
        e r 32
        f r 32
        g r 32
        h r 32
        i r 32
        j r 32
        l r 32
        m r 32
        n r 32
        o r 32
        p r 32
        q r 32
        r r 32
        s r 32
        t r 32
        u r 32
        v r 32
        x r 32
        z r 32


State 128
        Prior States: 46, 56, 142, 169, 187, 190

        <CMP> ::= '<' _

        '-' r 28
        '0' r 28
        '1' r 28
        '2' r 28
        '3' r 28
        '4' r 28
        '5' r 28
        '6' r 28
        '7' r 28
        '8' r 28
        '9' r 28
        a r 28
        b r 28
        c r 28
        d r 28
        e r 28
        f r 28
        g r 28
        h r 28
        i r 28
        j r 28
        l r 28
        m r 28
        n r 28
        o r 28
        p r 28
        q r 28
        r r 28
        s r 28
        t r 28
        u r 28
        v r 28
        x r 28
        z r 28


State 129
        Prior States: 46, 56, 142, 169, 187, 190

        <CMP> ::= '<=' _

        '-' r 29
        '0' r 29
        '1' r 29
        '2' r 29
        '3' r 29
        '4' r 29
        '5' r 29
        '6' r 29
        '7' r 29
        '8' r 29
        '9' r 29
        a r 29
        b r 29
        c r 29
        d r 29
        e r 29
        f r 29
        g r 29
        h r 29
        i r 29
        j r 29
        l r 29
        m r 29
        n r 29
        o r 29
        p r 29
        q r 29
        r r 29
        s r 29
        t r 29
        u r 29
        v r 29
        x r 29
        z r 29


State 130
        Prior States: 46, 56, 142, 169, 187, 190

        <CMP> ::= '==' _

        '-' r 31
        '0' r 31
        '1' r 31
        '2' r 31
        '3' r 31
        '4' r 31
        '5' r 31
        '6' r 31
        '7' r 31
        '8' r 31
        '9' r 31
        a r 31
        b r 31
        c r 31
        d r 31
        e r 31
        f r 31
        g r 31
        h r 31
        i r 31
        j r 31
        l r 31
        m r 31
        n r 31
        o r 31
        p r 31
        q r 31
        r r 31
        s r 31
        t r 31
        u r 31
        v r 31
        x r 31
        z r 31


State 131
        Prior States: 46, 56, 142, 169, 187, 190

        <CMP> ::= '>' _

        '-' r 27
        '0' r 27
        '1' r 27
        '2' r 27
        '3' r 27
        '4' r 27
        '5' r 27
        '6' r 27
        '7' r 27
        '8' r 27
        '9' r 27
        a r 27
        b r 27
        c r 27
        d r 27
        e r 27
        f r 27
        g r 27
        h r 27
        i r 27
        j r 27
        l r 27
        m r 27
        n r 27
        o r 27
        p r 27
        q r 27
        r r 27
        s r 27
        t r 27
        u r 27
        v r 27
        x r 27
        z r 27


State 132
        Prior States: 46, 56, 142, 169, 187, 190

        <CMP> ::= '>=' _

        '-' r 30
        '0' r 30
        '1' r 30
        '2' r 30
        '3' r 30
        '4' r 30
        '5' r 30
        '6' r 30
        '7' r 30
        '8' r 30
        '9' r 30
        a r 30
        b r 30
        c r 30
        d r 30
        e r 30
        f r 30
        g r 30
        h r 30
        i r 30
        j r 30
        l r 30
        m r 30
        n r 30
        o r 30
        p r 30
        q r 30
        r r 30
        s r 30
        t r 30
        u r 30
        v r 30
        x r 30
        z r 30


State 133
        Prior States: 46

        <Statement> ::= if <Expressao> then _ <Statements> end
        <Statement> ::= if <Expressao> then _ <Statements> else <Statements> end
        <Statements> ::= _ <Statement> <Statements>
        <Statements> ::= _ <Statement>
        <Statement> ::= _ int <VAR>
        <Statement> ::= _ string <VAR>
        <Statement> ::= _ int <VAR> ':=' <N>
        <Statement> ::= _ string <VAR> ':=' '"' <Expressao> '"'
        <Statement> ::= _ printf <VAR>
        <Statement> ::= _ printf '"' <Expressao> '"'
        <Statement> ::= _ assign <VAR> ':=' <Expressao>
        <Statement> ::= _ assign <VAR> ':=' '"' <Expressao> '"'
        <Statement> ::= _ while <Expressao> do <Statements> end
        <Statement> ::= _ if <Expressao> then <Statements> end
        <Statement> ::= _ if <Expressao> then <Statements> else <Statements> end

        assign s 3
        if s 4
        int s 5
        printf s 6
        string s 7
        while s 8
        <Statement> g 9
        <Statements> g 180


State 134
        Prior States: 46, 56, 142, 169, 187, 190

        <Expressao> ::= <Expressao> <CMP> _ <OP>
        <OP> ::= _ <OP> <ARITH> <NegadoExp>
        <OP> ::= _ <NegadoExp>
        <NegadoExp> ::= _ '-' <Valor>
        <NegadoExp> ::= _ <Valor>
        <Valor> ::= _ <VAR>
        <Valor> ::= _ <N>
        <N> ::= _ '0' <NF>
        <N> ::= _ '1' <NF>
        <N> ::= _ '2' <NF>
        <N> ::= _ '3' <NF>
        <N> ::= _ '4' <NF>
        <N> ::= _ '5' <NF>
        <N> ::= _ '6' <NF>
        <N> ::= _ '7' <NF>
        <N> ::= _ '8' <NF>
        <N> ::= _ '9' <NF>
        <VAR> ::= _ a <VF>
        <VAR> ::= _ b <VF>
        <VAR> ::= _ c <VF>
        <VAR> ::= _ d <VF>
        <VAR> ::= _ e <VF>
        <VAR> ::= _ f <VF>
        <VAR> ::= _ g <VF>
        <VAR> ::= _ h <VF>
        <VAR> ::= _ i <VF>
        <VAR> ::= _ j <VF>
        <VAR> ::= _ l <VF>
        <VAR> ::= _ m <VF>
        <VAR> ::= _ n <VF>
        <VAR> ::= _ o <VF>
        <VAR> ::= _ p <VF>
        <VAR> ::= _ q <VF>
        <VAR> ::= _ r <VF>
        <VAR> ::= _ s <VF>
        <VAR> ::= _ t <VF>
        <VAR> ::= _ u <VF>
        <VAR> ::= _ v <VF>
        <VAR> ::= _ x <VF>
        <VAR> ::= _ z <VF>

        '-' s 35
        '0' s 36
        '1' s 37
        '2' s 38
        '3' s 39
        '4' s 40
        '5' s 41
        '6' s 42
        '7' s 43
        '8' s 44
        '9' s 45
        a s 11
        b s 12
        c s 13
        d s 14
        e s 15
        f s 16
        g s 17
        h s 18
        i s 19
        j s 20
        l s 21
        m s 22
        n s 23
        o s 24
        p s 25
        q s 26
        r s 27
        s s 28
        t s 29
        u s 30
        v s 31
        x s 32
        z s 33
        <N> g 47
        <NegadoExp> g 48
        <OP> g 181
        <Valor> g 50
        <VAR> g 51


State 135
        Prior States: 49, 181

        <ARITH> ::= '-' _

        '-' r 23
        '0' r 23
        '1' r 23
        '2' r 23
        '3' r 23
        '4' r 23
        '5' r 23
        '6' r 23
        '7' r 23
        '8' r 23
        '9' r 23
        a r 23
        b r 23
        c r 23
        d r 23
        e r 23
        f r 23
        g r 23
        h r 23
        i r 23
        j r 23
        l r 23
        m r 23
        n r 23
        o r 23
        p r 23
        q r 23
        r r 23
        s r 23
        t r 23
        u r 23
        v r 23
        x r 23
        z r 23


State 136
        Prior States: 49, 181

        <ARITH> ::= '&' _

        '-' r 24
        '0' r 24
        '1' r 24
        '2' r 24
        '3' r 24
        '4' r 24
        '5' r 24
        '6' r 24
        '7' r 24
        '8' r 24
        '9' r 24
        a r 24
        b r 24
        c r 24
        d r 24
        e r 24
        f r 24
        g r 24
        h r 24
        i r 24
        j r 24
        l r 24
        m r 24
        n r 24
        o r 24
        p r 24
        q r 24
        r r 24
        s r 24
        t r 24
        u r 24
        v r 24
        x r 24
        z r 24


State 137
        Prior States: 49, 181

        <ARITH> ::= '*' _

        '-' r 25
        '0' r 25
        '1' r 25
        '2' r 25
        '3' r 25
        '4' r 25
        '5' r 25
        '6' r 25
        '7' r 25
        '8' r 25
        '9' r 25
        a r 25
        b r 25
        c r 25
        d r 25
        e r 25
        f r 25
        g r 25
        h r 25
        i r 25
        j r 25
        l r 25
        m r 25
        n r 25
        o r 25
        p r 25
        q r 25
        r r 25
        s r 25
        t r 25
        u r 25
        v r 25
        x r 25
        z r 25


State 138
        Prior States: 49, 181

        <ARITH> ::= '/' _

        '-' r 26
        '0' r 26
        '1' r 26
        '2' r 26
        '3' r 26
        '4' r 26
        '5' r 26
        '6' r 26
        '7' r 26
        '8' r 26
        '9' r 26
        a r 26
        b r 26
        c r 26
        d r 26
        e r 26
        f r 26
        g r 26
        h r 26
        i r 26
        j r 26
        l r 26
        m r 26
        n r 26
        o r 26
        p r 26
        q r 26
        r r 26
        s r 26
        t r 26
        u r 26
        v r 26
        x r 26
        z r 26


State 139
        Prior States: 49, 181

        <ARITH> ::= '+' _

        '-' r 22
        '0' r 22
        '1' r 22
        '2' r 22
        '3' r 22
        '4' r 22
        '5' r 22
        '6' r 22
        '7' r 22
        '8' r 22
        '9' r 22
        a r 22
        b r 22
        c r 22
        d r 22
        e r 22
        f r 22
        g r 22
        h r 22
        i r 22
        j r 22
        l r 22
        m r 22
        n r 22
        o r 22
        p r 22
        q r 22
        r r 22
        s r 22
        t r 22
        u r 22
        v r 22
        x r 22
        z r 22


State 140
        Prior States: 49, 181

        <OP> ::= <OP> <ARITH> _ <NegadoExp>
        <NegadoExp> ::= _ '-' <Valor>
        <NegadoExp> ::= _ <Valor>
        <Valor> ::= _ <VAR>
        <Valor> ::= _ <N>
        <N> ::= _ '0' <NF>
        <N> ::= _ '1' <NF>
        <N> ::= _ '2' <NF>
        <N> ::= _ '3' <NF>
        <N> ::= _ '4' <NF>
        <N> ::= _ '5' <NF>
        <N> ::= _ '6' <NF>
        <N> ::= _ '7' <NF>
        <N> ::= _ '8' <NF>
        <N> ::= _ '9' <NF>
        <VAR> ::= _ a <VF>
        <VAR> ::= _ b <VF>
        <VAR> ::= _ c <VF>
        <VAR> ::= _ d <VF>
        <VAR> ::= _ e <VF>
        <VAR> ::= _ f <VF>
        <VAR> ::= _ g <VF>
        <VAR> ::= _ h <VF>
        <VAR> ::= _ i <VF>
        <VAR> ::= _ j <VF>
        <VAR> ::= _ l <VF>
        <VAR> ::= _ m <VF>
        <VAR> ::= _ n <VF>
        <VAR> ::= _ o <VF>
        <VAR> ::= _ p <VF>
        <VAR> ::= _ q <VF>
        <VAR> ::= _ r <VF>
        <VAR> ::= _ s <VF>
        <VAR> ::= _ t <VF>
        <VAR> ::= _ u <VF>
        <VAR> ::= _ v <VF>
        <VAR> ::= _ x <VF>
        <VAR> ::= _ z <VF>

        '-' s 35
        '0' s 36
        '1' s 37
        '2' s 38
        '3' s 39
        '4' s 40
        '5' s 41
        '6' s 42
        '7' s 43
        '8' s 44
        '9' s 45
        a s 11
        b s 12
        c s 13
        d s 14
        e s 15
        f s 16
        g s 17
        h s 18
        i s 19
        j s 20
        l s 21
        m s 22
        n s 23
        o s 24
        p s 25
        q s 26
        r s 27
        s s 28
        t s 29
        u s 30
        v s 31
        x s 32
        z s 33
        <N> g 47
        <NegadoExp> g 182
        <Valor> g 50
        <VAR> g 51


State 141
        Prior States: 52

        <Statement> ::= int <VAR> ':=' _ <N>
        <N> ::= _ '0' <NF>
        <N> ::= _ '1' <NF>
        <N> ::= _ '2' <NF>
        <N> ::= _ '3' <NF>
        <N> ::= _ '4' <NF>
        <N> ::= _ '5' <NF>
        <N> ::= _ '6' <NF>
        <N> ::= _ '7' <NF>
        <N> ::= _ '8' <NF>
        <N> ::= _ '9' <NF>

        '0' s 36
        '1' s 37
        '2' s 38
        '3' s 39
        '4' s 40
        '5' s 41
        '6' s 42
        '7' s 43
        '8' s 44
        '9' s 45
        <N> g 183


State 142
        Prior States: 53

        <Statement> ::= printf '"' <Expressao> _ '"'
        <Expressao> ::= <Expressao> _ <CMP> <OP>
        <CMP> ::= _ '>'
        <CMP> ::= _ '<'
        <CMP> ::= _ '<='
        <CMP> ::= _ '>='
        <CMP> ::= _ '=='
        <CMP> ::= _ '!='

        '!=' s 127
        '"' s 184
        '<' s 128
        '<=' s 129
        '==' s 130
        '>' s 131
        '>=' s 132
        <CMP> g 134


State 143
        Prior States: 55

        <Statement> ::= string <VAR> ':=' _ '"' <Expressao> '"'

        '"' s 185


State 144
        Prior States: 56

        <Statement> ::= while <Expressao> do _ <Statements> end
        <Statements> ::= _ <Statement> <Statements>
        <Statements> ::= _ <Statement>
        <Statement> ::= _ int <VAR>
        <Statement> ::= _ string <VAR>
        <Statement> ::= _ int <VAR> ':=' <N>
        <Statement> ::= _ string <VAR> ':=' '"' <Expressao> '"'
        <Statement> ::= _ printf <VAR>
        <Statement> ::= _ printf '"' <Expressao> '"'
        <Statement> ::= _ assign <VAR> ':=' <Expressao>
        <Statement> ::= _ assign <VAR> ':=' '"' <Expressao> '"'
        <Statement> ::= _ while <Expressao> do <Statements> end
        <Statement> ::= _ if <Expressao> then <Statements> end
        <Statement> ::= _ if <Expressao> then <Statements> else <Statements> end

        assign s 3
        if s 4
        int s 5
        printf s 6
        string s 7
        while s 8
        <Statement> g 9
        <Statements> g 186


State 145
        Prior States: 59

        <VF> ::= a <VF> _

        '-' r 77
        '!=' r 77
        '"' r 77
        '&' r 77
        '*' r 77
        '/' r 77
        ':=' r 77
        '+' r 77
        '<' r 77
        '<=' r 77
        '==' r 77
        '>' r 77
        '>=' r 77
        assign r 77
        do r 77
        else r 77
        end r 77
        if r 77
        int r 77
        printf r 77
        string r 77
        then r 77
        while r 77


State 146
        Prior States: 60

        <VF> ::= b <VF> _

        '-' r 78
        '!=' r 78
        '"' r 78
        '&' r 78
        '*' r 78
        '/' r 78
        ':=' r 78
        '+' r 78
        '<' r 78
        '<=' r 78
        '==' r 78
        '>' r 78
        '>=' r 78
        assign r 78
        do r 78
        else r 78
        end r 78
        if r 78
        int r 78
        printf r 78
        string r 78
        then r 78
        while r 78


State 147
        Prior States: 61

        <VF> ::= c <VF> _

        '-' r 79
        '!=' r 79
        '"' r 79
        '&' r 79
        '*' r 79
        '/' r 79
        ':=' r 79
        '+' r 79
        '<' r 79
        '<=' r 79
        '==' r 79
        '>' r 79
        '>=' r 79
        assign r 79
        do r 79
        else r 79
        end r 79
        if r 79
        int r 79
        printf r 79
        string r 79
        then r 79
        while r 79


State 148
        Prior States: 62

        <VF> ::= d <VF> _

        '-' r 80
        '!=' r 80
        '"' r 80
        '&' r 80
        '*' r 80
        '/' r 80
        ':=' r 80
        '+' r 80
        '<' r 80
        '<=' r 80
        '==' r 80
        '>' r 80
        '>=' r 80
        assign r 80
        do r 80
        else r 80
        end r 80
        if r 80
        int r 80
        printf r 80
        string r 80
        then r 80
        while r 80


State 149
        Prior States: 63

        <VF> ::= e <VF> _

        '-' r 81
        '!=' r 81
        '"' r 81
        '&' r 81
        '*' r 81
        '/' r 81
        ':=' r 81
        '+' r 81
        '<' r 81
        '<=' r 81
        '==' r 81
        '>' r 81
        '>=' r 81
        assign r 81
        do r 81
        else r 81
        end r 81
        if r 81
        int r 81
        printf r 81
        string r 81
        then r 81
        while r 81


State 150
        Prior States: 64

        <VF> ::= f <VF> _

        '-' r 82
        '!=' r 82
        '"' r 82
        '&' r 82
        '*' r 82
        '/' r 82
        ':=' r 82
        '+' r 82
        '<' r 82
        '<=' r 82
        '==' r 82
        '>' r 82
        '>=' r 82
        assign r 82
        do r 82
        else r 82
        end r 82
        if r 82
        int r 82
        printf r 82
        string r 82
        then r 82
        while r 82


State 151
        Prior States: 65

        <VF> ::= g <VF> _

        '-' r 83
        '!=' r 83
        '"' r 83
        '&' r 83
        '*' r 83
        '/' r 83
        ':=' r 83
        '+' r 83
        '<' r 83
        '<=' r 83
        '==' r 83
        '>' r 83
        '>=' r 83
        assign r 83
        do r 83
        else r 83
        end r 83
        if r 83
        int r 83
        printf r 83
        string r 83
        then r 83
        while r 83


State 152
        Prior States: 66

        <VF> ::= h <VF> _

        '-' r 84
        '!=' r 84
        '"' r 84
        '&' r 84
        '*' r 84
        '/' r 84
        ':=' r 84
        '+' r 84
        '<' r 84
        '<=' r 84
        '==' r 84
        '>' r 84
        '>=' r 84
        assign r 84
        do r 84
        else r 84
        end r 84
        if r 84
        int r 84
        printf r 84
        string r 84
        then r 84
        while r 84


State 153
        Prior States: 67

        <VF> ::= i <VF> _

        '-' r 85
        '!=' r 85
        '"' r 85
        '&' r 85
        '*' r 85
        '/' r 85
        ':=' r 85
        '+' r 85
        '<' r 85
        '<=' r 85
        '==' r 85
        '>' r 85
        '>=' r 85
        assign r 85
        do r 85
        else r 85
        end r 85
        if r 85
        int r 85
        printf r 85
        string r 85
        then r 85
        while r 85


State 154
        Prior States: 68

        <VF> ::= j <VF> _

        '-' r 86
        '!=' r 86
        '"' r 86
        '&' r 86
        '*' r 86
        '/' r 86
        ':=' r 86
        '+' r 86
        '<' r 86
        '<=' r 86
        '==' r 86
        '>' r 86
        '>=' r 86
        assign r 86
        do r 86
        else r 86
        end r 86
        if r 86
        int r 86
        printf r 86
        string r 86
        then r 86
        while r 86


State 155
        Prior States: 69

        <VF> ::= l <VF> _

        '-' r 87
        '!=' r 87
        '"' r 87
        '&' r 87
        '*' r 87
        '/' r 87
        ':=' r 87
        '+' r 87
        '<' r 87
        '<=' r 87
        '==' r 87
        '>' r 87
        '>=' r 87
        assign r 87
        do r 87
        else r 87
        end r 87
        if r 87
        int r 87
        printf r 87
        string r 87
        then r 87
        while r 87


State 156
        Prior States: 70

        <VF> ::= m <VF> _

        '-' r 88
        '!=' r 88
        '"' r 88
        '&' r 88
        '*' r 88
        '/' r 88
        ':=' r 88
        '+' r 88
        '<' r 88
        '<=' r 88
        '==' r 88
        '>' r 88
        '>=' r 88
        assign r 88
        do r 88
        else r 88
        end r 88
        if r 88
        int r 88
        printf r 88
        string r 88
        then r 88
        while r 88


State 157
        Prior States: 71

        <VF> ::= n <VF> _

        '-' r 89
        '!=' r 89
        '"' r 89
        '&' r 89
        '*' r 89
        '/' r 89
        ':=' r 89
        '+' r 89
        '<' r 89
        '<=' r 89
        '==' r 89
        '>' r 89
        '>=' r 89
        assign r 89
        do r 89
        else r 89
        end r 89
        if r 89
        int r 89
        printf r 89
        string r 89
        then r 89
        while r 89


State 158
        Prior States: 72

        <VF> ::= o <VF> _

        '-' r 90
        '!=' r 90
        '"' r 90
        '&' r 90
        '*' r 90
        '/' r 90
        ':=' r 90
        '+' r 90
        '<' r 90
        '<=' r 90
        '==' r 90
        '>' r 90
        '>=' r 90
        assign r 90
        do r 90
        else r 90
        end r 90
        if r 90
        int r 90
        printf r 90
        string r 90
        then r 90
        while r 90


State 159
        Prior States: 73

        <VF> ::= p <VF> _

        '-' r 91
        '!=' r 91
        '"' r 91
        '&' r 91
        '*' r 91
        '/' r 91
        ':=' r 91
        '+' r 91
        '<' r 91
        '<=' r 91
        '==' r 91
        '>' r 91
        '>=' r 91
        assign r 91
        do r 91
        else r 91
        end r 91
        if r 91
        int r 91
        printf r 91
        string r 91
        then r 91
        while r 91


State 160
        Prior States: 74

        <VF> ::= q <VF> _

        '-' r 92
        '!=' r 92
        '"' r 92
        '&' r 92
        '*' r 92
        '/' r 92
        ':=' r 92
        '+' r 92
        '<' r 92
        '<=' r 92
        '==' r 92
        '>' r 92
        '>=' r 92
        assign r 92
        do r 92
        else r 92
        end r 92
        if r 92
        int r 92
        printf r 92
        string r 92
        then r 92
        while r 92


State 161
        Prior States: 75

        <VF> ::= r <VF> _

        '-' r 93
        '!=' r 93
        '"' r 93
        '&' r 93
        '*' r 93
        '/' r 93
        ':=' r 93
        '+' r 93
        '<' r 93
        '<=' r 93
        '==' r 93
        '>' r 93
        '>=' r 93
        assign r 93
        do r 93
        else r 93
        end r 93
        if r 93
        int r 93
        printf r 93
        string r 93
        then r 93
        while r 93


State 162
        Prior States: 76

        <VF> ::= s <VF> _

        '-' r 94
        '!=' r 94
        '"' r 94
        '&' r 94
        '*' r 94
        '/' r 94
        ':=' r 94
        '+' r 94
        '<' r 94
        '<=' r 94
        '==' r 94
        '>' r 94
        '>=' r 94
        assign r 94
        do r 94
        else r 94
        end r 94
        if r 94
        int r 94
        printf r 94
        string r 94
        then r 94
        while r 94


State 163
        Prior States: 77

        <VF> ::= t <VF> _

        '-' r 95
        '!=' r 95
        '"' r 95
        '&' r 95
        '*' r 95
        '/' r 95
        ':=' r 95
        '+' r 95
        '<' r 95
        '<=' r 95
        '==' r 95
        '>' r 95
        '>=' r 95
        assign r 95
        do r 95
        else r 95
        end r 95
        if r 95
        int r 95
        printf r 95
        string r 95
        then r 95
        while r 95


State 164
        Prior States: 78

        <VF> ::= u <VF> _

        '-' r 96
        '!=' r 96
        '"' r 96
        '&' r 96
        '*' r 96
        '/' r 96
        ':=' r 96
        '+' r 96
        '<' r 96
        '<=' r 96
        '==' r 96
        '>' r 96
        '>=' r 96
        assign r 96
        do r 96
        else r 96
        end r 96
        if r 96
        int r 96
        printf r 96
        string r 96
        then r 96
        while r 96


State 165
        Prior States: 79

        <VF> ::= v <VF> _

        '-' r 97
        '!=' r 97
        '"' r 97
        '&' r 97
        '*' r 97
        '/' r 97
        ':=' r 97
        '+' r 97
        '<' r 97
        '<=' r 97
        '==' r 97
        '>' r 97
        '>=' r 97
        assign r 97
        do r 97
        else r 97
        end r 97
        if r 97
        int r 97
        printf r 97
        string r 97
        then r 97
        while r 97


State 166
        Prior States: 80

        <VF> ::= x <VF> _

        '-' r 98
        '!=' r 98
        '"' r 98
        '&' r 98
        '*' r 98
        '/' r 98
        ':=' r 98
        '+' r 98
        '<' r 98
        '<=' r 98
        '==' r 98
        '>' r 98
        '>=' r 98
        assign r 98
        do r 98
        else r 98
        end r 98
        if r 98
        int r 98
        printf r 98
        string r 98
        then r 98
        while r 98


State 167
        Prior States: 81

        <VF> ::= z <VF> _

        '-' r 99
        '!=' r 99
        '"' r 99
        '&' r 99
        '*' r 99
        '/' r 99
        ':=' r 99
        '+' r 99
        '<' r 99
        '<=' r 99
        '==' r 99
        '>' r 99
        '>=' r 99
        assign r 99
        do r 99
        else r 99
        end r 99
        if r 99
        int r 99
        printf r 99
        string r 99
        then r 99
        while r 99


State 168
        Prior States: 105

        <Statement> ::= assign <VAR> ':=' '"' _ <Expressao> '"'
        <Expressao> ::= _ <Expressao> <CMP> <OP>
        <Expressao> ::= _ <OP>
        <OP> ::= _ <OP> <ARITH> <NegadoExp>
        <OP> ::= _ <NegadoExp>
        <NegadoExp> ::= _ '-' <Valor>
        <NegadoExp> ::= _ <Valor>
        <Valor> ::= _ <VAR>
        <Valor> ::= _ <N>
        <N> ::= _ '0' <NF>
        <N> ::= _ '1' <NF>
        <N> ::= _ '2' <NF>
        <N> ::= _ '3' <NF>
        <N> ::= _ '4' <NF>
        <N> ::= _ '5' <NF>
        <N> ::= _ '6' <NF>
        <N> ::= _ '7' <NF>
        <N> ::= _ '8' <NF>
        <N> ::= _ '9' <NF>
        <VAR> ::= _ a <VF>
        <VAR> ::= _ b <VF>
        <VAR> ::= _ c <VF>
        <VAR> ::= _ d <VF>
        <VAR> ::= _ e <VF>
        <VAR> ::= _ f <VF>
        <VAR> ::= _ g <VF>
        <VAR> ::= _ h <VF>
        <VAR> ::= _ i <VF>
        <VAR> ::= _ j <VF>
        <VAR> ::= _ l <VF>
        <VAR> ::= _ m <VF>
        <VAR> ::= _ n <VF>
        <VAR> ::= _ o <VF>
        <VAR> ::= _ p <VF>
        <VAR> ::= _ q <VF>
        <VAR> ::= _ r <VF>
        <VAR> ::= _ s <VF>
        <VAR> ::= _ t <VF>
        <VAR> ::= _ u <VF>
        <VAR> ::= _ v <VF>
        <VAR> ::= _ x <VF>
        <VAR> ::= _ z <VF>

        '-' s 35
        '0' s 36
        '1' s 37
        '2' s 38
        '3' s 39
        '4' s 40
        '5' s 41
        '6' s 42
        '7' s 43
        '8' s 44
        '9' s 45
        a s 11
        b s 12
        c s 13
        d s 14
        e s 15
        f s 16
        g s 17
        h s 18
        i s 19
        j s 20
        l s 21
        m s 22
        n s 23
        o s 24
        p s 25
        q s 26
        r s 27
        s s 28
        t s 29
        u s 30
        v s 31
        x s 32
        z s 33
        <Expressao> g 187
        <N> g 47
        <NegadoExp> g 48
        <OP> g 49
        <Valor> g 50
        <VAR> g 51


State 169
        Prior States: 105

        <Statement> ::= assign <VAR> ':=' <Expressao> _
        <Expressao> ::= <Expressao> _ <CMP> <OP>
        <CMP> ::= _ '>'
        <CMP> ::= _ '<'
        <CMP> ::= _ '<='
        <CMP> ::= _ '>='
        <CMP> ::= _ '=='
        <CMP> ::= _ '!='

        '!=' s 127
        '<' s 128
        '<=' s 129
        '==' s 130
        '>' s 131
        '>=' s 132
        <CMP> g 134
        assign r 9
        else r 9
        end r 9
        if r 9
        int r 9
        printf r 9
        string r 9
        while r 9


State 170
        Prior States: 107

        <NF> ::= '0' <NF> _

        '-' r 43
        '!=' r 43
        '"' r 43
        '&' r 43
        '*' r 43
        '/' r 43
        '+' r 43
        '<' r 43
        '<=' r 43
        '==' r 43
        '>' r 43
        '>=' r 43
        assign r 43
        do r 43
        else r 43
        end r 43
        if r 43
        int r 43
        printf r 43
        string r 43
        then r 43
        while r 43


State 171
        Prior States: 108

        <NF> ::= '1' <NF> _

        '-' r 44
        '!=' r 44
        '"' r 44
        '&' r 44
        '*' r 44
        '/' r 44
        '+' r 44
        '<' r 44
        '<=' r 44
        '==' r 44
        '>' r 44
        '>=' r 44
        assign r 44
        do r 44
        else r 44
        end r 44
        if r 44
        int r 44
        printf r 44
        string r 44
        then r 44
        while r 44


State 172
        Prior States: 109

        <NF> ::= '2' <NF> _

        '-' r 45
        '!=' r 45
        '"' r 45
        '&' r 45
        '*' r 45
        '/' r 45
        '+' r 45
        '<' r 45
        '<=' r 45
        '==' r 45
        '>' r 45
        '>=' r 45
        assign r 45
        do r 45
        else r 45
        end r 45
        if r 45
        int r 45
        printf r 45
        string r 45
        then r 45
        while r 45


State 173
        Prior States: 110

        <NF> ::= '3' <NF> _

        '-' r 46
        '!=' r 46
        '"' r 46
        '&' r 46
        '*' r 46
        '/' r 46
        '+' r 46
        '<' r 46
        '<=' r 46
        '==' r 46
        '>' r 46
        '>=' r 46
        assign r 46
        do r 46
        else r 46
        end r 46
        if r 46
        int r 46
        printf r 46
        string r 46
        then r 46
        while r 46


State 174
        Prior States: 111

        <NF> ::= '4' <NF> _

        '-' r 47
        '!=' r 47
        '"' r 47
        '&' r 47
        '*' r 47
        '/' r 47
        '+' r 47
        '<' r 47
        '<=' r 47
        '==' r 47
        '>' r 47
        '>=' r 47
        assign r 47
        do r 47
        else r 47
        end r 47
        if r 47
        int r 47
        printf r 47
        string r 47
        then r 47
        while r 47


State 175
        Prior States: 112

        <NF> ::= '5' <NF> _

        '-' r 48
        '!=' r 48
        '"' r 48
        '&' r 48
        '*' r 48
        '/' r 48
        '+' r 48
        '<' r 48
        '<=' r 48
        '==' r 48
        '>' r 48
        '>=' r 48
        assign r 48
        do r 48
        else r 48
        end r 48
        if r 48
        int r 48
        printf r 48
        string r 48
        then r 48
        while r 48


State 176
        Prior States: 113

        <NF> ::= '6' <NF> _

        '-' r 49
        '!=' r 49
        '"' r 49
        '&' r 49
        '*' r 49
        '/' r 49
        '+' r 49
        '<' r 49
        '<=' r 49
        '==' r 49
        '>' r 49
        '>=' r 49
        assign r 49
        do r 49
        else r 49
        end r 49
        if r 49
        int r 49
        printf r 49
        string r 49
        then r 49
        while r 49


State 177
        Prior States: 114

        <NF> ::= '7' <NF> _

        '-' r 50
        '!=' r 50
        '"' r 50
        '&' r 50
        '*' r 50
        '/' r 50
        '+' r 50
        '<' r 50
        '<=' r 50
        '==' r 50
        '>' r 50
        '>=' r 50
        assign r 50
        do r 50
        else r 50
        end r 50
        if r 50
        int r 50
        printf r 50
        string r 50
        then r 50
        while r 50


State 178
        Prior States: 115

        <NF> ::= '8' <NF> _

        '-' r 51
        '!=' r 51
        '"' r 51
        '&' r 51
        '*' r 51
        '/' r 51
        '+' r 51
        '<' r 51
        '<=' r 51
        '==' r 51
        '>' r 51
        '>=' r 51
        assign r 51
        do r 51
        else r 51
        end r 51
        if r 51
        int r 51
        printf r 51
        string r 51
        then r 51
        while r 51


State 179
        Prior States: 116

        <NF> ::= '9' <NF> _

        '-' r 52
        '!=' r 52
        '"' r 52
        '&' r 52
        '*' r 52
        '/' r 52
        '+' r 52
        '<' r 52
        '<=' r 52
        '==' r 52
        '>' r 52
        '>=' r 52
        assign r 52
        do r 52
        else r 52
        end r 52
        if r 52
        int r 52
        printf r 52
        string r 52
        then r 52
        while r 52


State 180
        Prior States: 133

        <Statement> ::= if <Expressao> then <Statements> _ end
        <Statement> ::= if <Expressao> then <Statements> _ else <Statements> end

        else s 188
        end s 189


State 181
        Prior States: 134

        <Expressao> ::= <Expressao> <CMP> <OP> _
        <OP> ::= <OP> _ <ARITH> <NegadoExp>
        <ARITH> ::= _ '+'
        <ARITH> ::= _ '-'
        <ARITH> ::= _ '&'
        <ARITH> ::= _ '*'
        <ARITH> ::= _ '/'

        '-' s 135
        '&' s 136
        '*' s 137
        '/' s 138
        '+' s 139
        <ARITH> g 140
        '!=' r 14
        '"' r 14
        '<' r 14
        '<=' r 14
        '==' r 14
        '>' r 14
        '>=' r 14
        assign r 14
        do r 14
        else r 14
        end r 14
        if r 14
        int r 14
        printf r 14
        string r 14
        then r 14
        while r 14


State 182
        Prior States: 140

        <OP> ::= <OP> <ARITH> <NegadoExp> _

        '-' r 16
        '!=' r 16
        '"' r 16
        '&' r 16
        '*' r 16
        '/' r 16
        '+' r 16
        '<' r 16
        '<=' r 16
        '==' r 16
        '>' r 16
        '>=' r 16
        assign r 16
        do r 16
        else r 16
        end r 16
        if r 16
        int r 16
        printf r 16
        string r 16
        then r 16
        while r 16


State 183
        Prior States: 141

        <Statement> ::= int <VAR> ':=' <N> _

        assign r 5
        else r 5
        end r 5
        if r 5
        int r 5
        printf r 5
        string r 5
        while r 5


State 184
        Prior States: 142

        <Statement> ::= printf '"' <Expressao> '"' _

        assign r 8
        else r 8
        end r 8
        if r 8
        int r 8
        printf r 8
        string r 8
        while r 8


State 185
        Prior States: 143

        <Statement> ::= string <VAR> ':=' '"' _ <Expressao> '"'
        <Expressao> ::= _ <Expressao> <CMP> <OP>
        <Expressao> ::= _ <OP>
        <OP> ::= _ <OP> <ARITH> <NegadoExp>
        <OP> ::= _ <NegadoExp>
        <NegadoExp> ::= _ '-' <Valor>
        <NegadoExp> ::= _ <Valor>
        <Valor> ::= _ <VAR>
        <Valor> ::= _ <N>
        <N> ::= _ '0' <NF>
        <N> ::= _ '1' <NF>
        <N> ::= _ '2' <NF>
        <N> ::= _ '3' <NF>
        <N> ::= _ '4' <NF>
        <N> ::= _ '5' <NF>
        <N> ::= _ '6' <NF>
        <N> ::= _ '7' <NF>
        <N> ::= _ '8' <NF>
        <N> ::= _ '9' <NF>
        <VAR> ::= _ a <VF>
        <VAR> ::= _ b <VF>
        <VAR> ::= _ c <VF>
        <VAR> ::= _ d <VF>
        <VAR> ::= _ e <VF>
        <VAR> ::= _ f <VF>
        <VAR> ::= _ g <VF>
        <VAR> ::= _ h <VF>
        <VAR> ::= _ i <VF>
        <VAR> ::= _ j <VF>
        <VAR> ::= _ l <VF>
        <VAR> ::= _ m <VF>
        <VAR> ::= _ n <VF>
        <VAR> ::= _ o <VF>
        <VAR> ::= _ p <VF>
        <VAR> ::= _ q <VF>
        <VAR> ::= _ r <VF>
        <VAR> ::= _ s <VF>
        <VAR> ::= _ t <VF>
        <VAR> ::= _ u <VF>
        <VAR> ::= _ v <VF>
        <VAR> ::= _ x <VF>
        <VAR> ::= _ z <VF>

        '-' s 35
        '0' s 36
        '1' s 37
        '2' s 38
        '3' s 39
        '4' s 40
        '5' s 41
        '6' s 42
        '7' s 43
        '8' s 44
        '9' s 45
        a s 11
        b s 12
        c s 13
        d s 14
        e s 15
        f s 16
        g s 17
        h s 18
        i s 19
        j s 20
        l s 21
        m s 22
        n s 23
        o s 24
        p s 25
        q s 26
        r s 27
        s s 28
        t s 29
        u s 30
        v s 31
        x s 32
        z s 33
        <Expressao> g 190
        <N> g 47
        <NegadoExp> g 48
        <OP> g 49
        <Valor> g 50
        <VAR> g 51


State 186
        Prior States: 144

        <Statement> ::= while <Expressao> do <Statements> _ end

        end s 191


State 187
        Prior States: 168

        <Statement> ::= assign <VAR> ':=' '"' <Expressao> _ '"'
        <Expressao> ::= <Expressao> _ <CMP> <OP>
        <CMP> ::= _ '>'
        <CMP> ::= _ '<'
        <CMP> ::= _ '<='
        <CMP> ::= _ '>='
        <CMP> ::= _ '=='
        <CMP> ::= _ '!='

        '!=' s 127
        '"' s 192
        '<' s 128
        '<=' s 129
        '==' s 130
        '>' s 131
        '>=' s 132
        <CMP> g 134


State 188
        Prior States: 180

        <Statement> ::= if <Expressao> then <Statements> else _ <Statements> end
        <Statements> ::= _ <Statement> <Statements>
        <Statements> ::= _ <Statement>
        <Statement> ::= _ int <VAR>
        <Statement> ::= _ string <VAR>
        <Statement> ::= _ int <VAR> ':=' <N>
        <Statement> ::= _ string <VAR> ':=' '"' <Expressao> '"'
        <Statement> ::= _ printf <VAR>
        <Statement> ::= _ printf '"' <Expressao> '"'
        <Statement> ::= _ assign <VAR> ':=' <Expressao>
        <Statement> ::= _ assign <VAR> ':=' '"' <Expressao> '"'
        <Statement> ::= _ while <Expressao> do <Statements> end
        <Statement> ::= _ if <Expressao> then <Statements> end
        <Statement> ::= _ if <Expressao> then <Statements> else <Statements> end

        assign s 3
        if s 4
        int s 5
        printf s 6
        string s 7
        while s 8
        <Statement> g 9
        <Statements> g 193


State 189
        Prior States: 180

        <Statement> ::= if <Expressao> then <Statements> end _

        assign r 12
        else r 12
        end r 12
        if r 12
        int r 12
        printf r 12
        string r 12
        while r 12


State 190
        Prior States: 185

        <Statement> ::= string <VAR> ':=' '"' <Expressao> _ '"'
        <Expressao> ::= <Expressao> _ <CMP> <OP>
        <CMP> ::= _ '>'
        <CMP> ::= _ '<'
        <CMP> ::= _ '<='
        <CMP> ::= _ '>='
        <CMP> ::= _ '=='
        <CMP> ::= _ '!='

        '!=' s 127
        '"' s 194
        '<' s 128
        '<=' s 129
        '==' s 130
        '>' s 131
        '>=' s 132
        <CMP> g 134


State 191
        Prior States: 186

        <Statement> ::= while <Expressao> do <Statements> end _

        assign r 11
        else r 11
        end r 11
        if r 11
        int r 11
        printf r 11
        string r 11
        while r 11


State 192
        Prior States: 187

        <Statement> ::= assign <VAR> ':=' '"' <Expressao> '"' _

        assign r 10
        else r 10
        end r 10
        if r 10
        int r 10
        printf r 10
        string r 10
        while r 10


State 193
        Prior States: 188

        <Statement> ::= if <Expressao> then <Statements> else <Statements> _ end

        end s 195


State 194
        Prior States: 190

        <Statement> ::= string <VAR> ':=' '"' <Expressao> '"' _

        assign r 6
        else r 6
        end r 6
        if r 6
        int r 6
        printf r 6
        string r 6
        while r 6


State 195
        Prior States: 193

        <Statement> ::= if <Expressao> then <Statements> else <Statements> end _

        assign r 13
        else r 13
        end r 13
        if r 13
        int r 13
        printf r 13
        string r 13
        while r 13
